(()=>{"use strict";var e={867:(e,n,t)=>{t.d(n,{Z:()=>s});var o=t(537),a=t.n(o),r=t(645),i=t.n(r)()(a());i.push([e.id,".content {\n    display: grid;\n    grid-template-rows: repeat(3, auto);\n    align-content: start;\n    background-color: #f8e8e8;\n    height: inherit;\n}\n\n.opening-line {\n    justify-self: center;\n    font-size: 1.0rem;\n    line-height: 1.2rem;\n    text-align: center;\n    font-weight: bold;\n    max-width: 1440px;\n    padding: 20px;\n}\n\n.image-container {\n    display: flex;\n    justify-content: center;\n    flex-wrap: nowrap;\n    gap: 20px;\n}\n\n.image-panel {\n    position: relative;\n    width: 324px;\n    height: 170px;\n    background-size: cover;\n    border-radius: 10px;\n    box-shadow: 0px 6px 5px rgba(60, 60, 60, 0.3);\n}\n\n.quote-container {\n    display: flex;\n    justify-content: center;\n    flex-wrap: nowrap;\n    padding: 20px;\n    gap: 20px;\n}\n\n.quote-panel {\n    flex-shrink: 0;\n    display: grid;\n    grid-template-rows: 1fr auto;\n    height: 270px;\n    width: 300px;\n    overflow: auto;\n    border-radius: 10px;\n    background-color: rgb(250, 250, 250);\n    box-shadow: 0px 6px 5px rgba(60, 60, 60, 0.3);\n    padding: 12px;\n}\n\n.quote-panel .quote-panel-quote {\n    font-style: italic;\n    font-size: 1.1rem;\n    line-height: 1.4rem;\n}\n\n.quote-panel .quote-panel-author {\n    font-size: 0.9rem;\n    text-align: end;\n}","",{version:3,sources:["webpack://./src/content/content-home-styles.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,mCAAmC;IACnC,oBAAoB;IACpB,yBAAyB;IACzB,eAAe;AACnB;;AAEA;IACI,oBAAoB;IACpB,iBAAiB;IACjB,mBAAmB;IACnB,kBAAkB;IAClB,iBAAiB;IACjB,iBAAiB;IACjB,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,iBAAiB;IACjB,SAAS;AACb;;AAEA;IACI,kBAAkB;IAClB,YAAY;IACZ,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,6CAA6C;AACjD;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,iBAAiB;IACjB,aAAa;IACb,SAAS;AACb;;AAEA;IACI,cAAc;IACd,aAAa;IACb,4BAA4B;IAC5B,aAAa;IACb,YAAY;IACZ,cAAc;IACd,mBAAmB;IACnB,oCAAoC;IACpC,6CAA6C;IAC7C,aAAa;AACjB;;AAEA;IACI,kBAAkB;IAClB,iBAAiB;IACjB,mBAAmB;AACvB;;AAEA;IACI,iBAAiB;IACjB,eAAe;AACnB",sourcesContent:[".content {\n    display: grid;\n    grid-template-rows: repeat(3, auto);\n    align-content: start;\n    background-color: #f8e8e8;\n    height: inherit;\n}\n\n.opening-line {\n    justify-self: center;\n    font-size: 1.0rem;\n    line-height: 1.2rem;\n    text-align: center;\n    font-weight: bold;\n    max-width: 1440px;\n    padding: 20px;\n}\n\n.image-container {\n    display: flex;\n    justify-content: center;\n    flex-wrap: nowrap;\n    gap: 20px;\n}\n\n.image-panel {\n    position: relative;\n    width: 324px;\n    height: 170px;\n    background-size: cover;\n    border-radius: 10px;\n    box-shadow: 0px 6px 5px rgba(60, 60, 60, 0.3);\n}\n\n.quote-container {\n    display: flex;\n    justify-content: center;\n    flex-wrap: nowrap;\n    padding: 20px;\n    gap: 20px;\n}\n\n.quote-panel {\n    flex-shrink: 0;\n    display: grid;\n    grid-template-rows: 1fr auto;\n    height: 270px;\n    width: 300px;\n    overflow: auto;\n    border-radius: 10px;\n    background-color: rgb(250, 250, 250);\n    box-shadow: 0px 6px 5px rgba(60, 60, 60, 0.3);\n    padding: 12px;\n}\n\n.quote-panel .quote-panel-quote {\n    font-style: italic;\n    font-size: 1.1rem;\n    line-height: 1.4rem;\n}\n\n.quote-panel .quote-panel-author {\n    font-size: 0.9rem;\n    text-align: end;\n}"],sourceRoot:""}]);const s=i},28:(e,n,t)=>{t.d(n,{Z:()=>s});var o=t(537),a=t.n(o),r=t(645),i=t.n(r)()(a());i.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Nunito:wght@300&family=Righteous&family=Staatliches&display=swap);"]),i.push([e.id,'/* Fonts */\n\n:root {\n    --nunito-font-family: Nunito, system-ui, "Segoe UI", Roboto, Helvetica, Arial,\n        sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";\n    --righteous-font-family: Righteous, system-ui, "Segoe UI", Roboto, Helvetica, Arial,\n        sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";\n    font-size: 20px;\n}\n\n.no-select {\n    -webkit-touch-callout: none;    /* iOS Safari */\n    -webkit-user-select: none;      /* Safari */\n    -khtml-user-select: none;       /* Konqueror HTML */\n    -moz-user-select: none;         /* Old versions of Firefox */\n    -ms-user-select: none;          /* Internet Explorer/Edge */\n    user-select: none;              /* Non-prefixed version, currently\n                                       supported by Chrome, Edge, Opera and Firefox */\n}\n\nh1, h2, h3, h4, h5, h6 {\n    padding: 0px;\n    margin: 0px;\n}\n\nbody {\n    font-family: Nunito, system-ui, "Segoe UI", Roboto, Helvetica, Arial,\n        sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";\n    font-family: var(--nunito-font-family);\n    margin: 0;\n    justify-content: center;\n    min-width: 100vw;\n    min-height: 100vh;\n    height: 100vh;\n}\n\n#page { \n    display: grid;\n    grid-template-rows: repeat(2, auto);\n    width: inherit;\n    height: 100vh;\n}\n\n.header {\n    grid-area: 1 / 1 / 2 / -1;\n    font-family: var(--righteous-font-family);\n    background-color: rgb(230, 6, 6);\n    padding: 20px;\n}\n\n.header .company-name {\n    grid-area: 1 / 1 / 2 / -1;\n    text-align: center;\n    font-size: 1.8rem;\n    white-space: nowrap;\n    color: white;\n}\n\n.header .navigation-bar {\n    grid-area: 2 / 1 / -1 / -1;\n    display: flex;\n    justify-content: center;\n    flex-wrap: nowrap;\n    gap: 12px;\n    padding-top: 30px;\n}\n\n.header .navigation-bar button {\n    flex-shrink: 0;\n    width: 6rem;\n    height: 1.6rem;\n    border-radius: 9999px;\n    font-family: var(--nunito-font-family);\n    font-size: 0.8rem;\n    font-weight: bold;\n    text-align: center;\n    vertical-align: center;\n    border: none;\n    background-color: rgb(245, 245, 245);\n}\n.header .navigation-bar button:hover {\n    outline: 2px solid rgb(255, 255, 255);\n    background-color: rgb(255, 255, 255);\n}\n.header .navigation-bar button:active {\n    background-color: rgb(221, 221, 221);\n}\n.header .navigation-bar button.current {\n    background-color: rgb(253, 185, 36);\n}\n\n.content {\n    grid-area: 2 / 1 / -1 / -1;\n}',"",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA,UAAU;;AAGV;IACI;4EACwE;IACxE;4EACwE;IACxE,eAAe;AACnB;;AAEA;IACI,2BAA2B,KAAK,eAAe;IAC/C,yBAAyB,OAAO,WAAW;IAC3C,wBAAwB,QAAQ,mBAAmB;IACnD,sBAAsB,UAAU,4BAA4B;IAC5D,qBAAqB,WAAW,2BAA2B;IAC3D,iBAAiB,eAAe;qFACiD;AACrF;;AAEA;IACI,YAAY;IACZ,WAAW;AACf;;AAEA;IACI;4EACwE;IACxE,sCAAsC;IACtC,SAAS;IACT,uBAAuB;IACvB,gBAAgB;IAChB,iBAAiB;IACjB,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,mCAAmC;IACnC,cAAc;IACd,aAAa;AACjB;;AAEA;IACI,yBAAyB;IACzB,yCAAyC;IACzC,gCAAgC;IAChC,aAAa;AACjB;;AAEA;IACI,yBAAyB;IACzB,kBAAkB;IAClB,iBAAiB;IACjB,mBAAmB;IACnB,YAAY;AAChB;;AAEA;IACI,0BAA0B;IAC1B,aAAa;IACb,uBAAuB;IACvB,iBAAiB;IACjB,SAAS;IACT,iBAAiB;AACrB;;AAEA;IACI,cAAc;IACd,WAAW;IACX,cAAc;IACd,qBAAqB;IACrB,sCAAsC;IACtC,iBAAiB;IACjB,iBAAiB;IACjB,kBAAkB;IAClB,sBAAsB;IACtB,YAAY;IACZ,oCAAoC;AACxC;AACA;IACI,qCAAqC;IACrC,oCAAoC;AACxC;AACA;IACI,oCAAoC;AACxC;AACA;IACI,mCAAmC;AACvC;;AAEA;IACI,0BAA0B;AAC9B",sourcesContent:['/* Fonts */\n@import url(\'https://fonts.googleapis.com/css2?family=Nunito:wght@300&family=Righteous&family=Staatliches&display=swap\');\n\n:root {\n    --nunito-font-family: Nunito, system-ui, "Segoe UI", Roboto, Helvetica, Arial,\n        sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";\n    --righteous-font-family: Righteous, system-ui, "Segoe UI", Roboto, Helvetica, Arial,\n        sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";\n    font-size: 20px;\n}\n\n.no-select {\n    -webkit-touch-callout: none;    /* iOS Safari */\n    -webkit-user-select: none;      /* Safari */\n    -khtml-user-select: none;       /* Konqueror HTML */\n    -moz-user-select: none;         /* Old versions of Firefox */\n    -ms-user-select: none;          /* Internet Explorer/Edge */\n    user-select: none;              /* Non-prefixed version, currently\n                                       supported by Chrome, Edge, Opera and Firefox */\n}\n\nh1, h2, h3, h4, h5, h6 {\n    padding: 0px;\n    margin: 0px;\n}\n\nbody {\n    font-family: Nunito, system-ui, "Segoe UI", Roboto, Helvetica, Arial,\n        sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";\n    font-family: var(--nunito-font-family);\n    margin: 0;\n    justify-content: center;\n    min-width: 100vw;\n    min-height: 100vh;\n    height: 100vh;\n}\n\n#page { \n    display: grid;\n    grid-template-rows: repeat(2, auto);\n    width: inherit;\n    height: 100vh;\n}\n\n.header {\n    grid-area: 1 / 1 / 2 / -1;\n    font-family: var(--righteous-font-family);\n    background-color: rgb(230, 6, 6);\n    padding: 20px;\n}\n\n.header .company-name {\n    grid-area: 1 / 1 / 2 / -1;\n    text-align: center;\n    font-size: 1.8rem;\n    white-space: nowrap;\n    color: white;\n}\n\n.header .navigation-bar {\n    grid-area: 2 / 1 / -1 / -1;\n    display: flex;\n    justify-content: center;\n    flex-wrap: nowrap;\n    gap: 12px;\n    padding-top: 30px;\n}\n\n.header .navigation-bar button {\n    flex-shrink: 0;\n    width: 6rem;\n    height: 1.6rem;\n    border-radius: 9999px;\n    font-family: var(--nunito-font-family);\n    font-size: 0.8rem;\n    font-weight: bold;\n    text-align: center;\n    vertical-align: center;\n    border: none;\n    background-color: rgb(245, 245, 245);\n}\n.header .navigation-bar button:hover {\n    outline: 2px solid rgb(255, 255, 255);\n    background-color: rgb(255, 255, 255);\n}\n.header .navigation-bar button:active {\n    background-color: rgb(221, 221, 221);\n}\n.header .navigation-bar button.current {\n    background-color: rgb(253, 185, 36);\n}\n\n.content {\n    grid-area: 2 / 1 / -1 / -1;\n}'],sourceRoot:""}]);const s=i},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",o=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),o&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),o&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,o,a,r){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(o)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(i[c]=!0)}for(var A=0;A<e.length;A++){var l=[].concat(e[A]);o&&i[l[0]]||(void 0!==r&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=r),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),a&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=a):l[4]="".concat(a)),n.push(l))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),r="/*# ".concat(a," */");return[n].concat([r]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,o=0;o<n.length;o++)if(n[o].identifier===e){t=o;break}return t}function o(e,o){for(var r={},i=[],s=0;s<e.length;s++){var c=e[s],A=o.base?c[0]+o.base:c[0],l=r[A]||0,d="".concat(A," ").concat(l);r[A]=l+1;var p=t(d),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)n[p].references++,n[p].updater(u);else{var h=a(u,o);o.byIndex=s,n.splice(s,0,{identifier:d,updater:h,references:1})}i.push(d)}return i}function a(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,a){var r=o(e=e||[],a=a||{});return function(e){e=e||[];for(var i=0;i<r.length;i++){var s=t(r[i]);n[s].references--}for(var c=o(e,a),A=0;A<r.length;A++){var l=t(r[A]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}r=c}}},569:e=>{var n={};e.exports=function(e,t){var o=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,a&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var r=t.sourceMap;r&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),n.styleTagTransform(o,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(o){var a=n[o];if(void 0!==a)return a.exports;var r=n[o]={id:o,exports:{}};return e[o](r,r.exports,t),r.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var o in n)t.o(n,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:n[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var o=n.getElementsByTagName("script");if(o.length)for(var a=o.length-1;a>-1&&!e;)e=o[a--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.nc=void 0,(()=>{const e=(e,n)=>{const t=document.createElement("button");return t.classList.add("header-nav-button"),n.forEach((e=>{t.classList.add(e)})),t.textContent=e,t},n=(e,n,t=[])=>{const o=document.createElement("div");o.classList.add("quote-panel"),t.forEach((e=>{o.classList.add(e)}));const a=document.createElement("div");a.classList.add("quote-panel-quote"),o.appendChild(a);const r=e=>{a.textContent=`${e}`};r(e);const i=document.createElement("div");i.classList.add("quote-panel-author"),o.appendChild(i);const s=e=>{i.textContent=`${e}`};return s(n),{e:o,setQuote:r,setAuthor:s}},o=(e,n=[])=>{const t=document.createElement("div");t.classList.add("image-panel"),n.forEach((e=>{t.classList.add(e)}));const o=e=>{t.style.backgroundImage=`url(${e})`};return o(e),{e:t,setImage:o,setOffset:e=>{t.style.backgroundPosition=e}}},a=t.p+"b214bb5a9875661dcb84.jpg",r=t.p+"8ad311f0ee65f73faa80.jpg",i=t.p+"88f410b70d52f903d64a.jpg";var s=t(379),c=t.n(s),A=t(795),l=t.n(A),d=t(569),p=t.n(d),u=t(565),h=t.n(u),m=t(216),f=t.n(m),g=t(589),C=t.n(g),b=t(867),I={};I.styleTagTransform=C(),I.setAttributes=h(),I.insert=p().bind(null,"head"),I.domAPI=l(),I.insertStyleElement=f(),c()(b.Z,I),b.Z&&b.Z.locals&&b.Z.locals;const B=()=>{const e=document.querySelector(".content"),t=document.createElement("div");t.classList.add("opening-line"),t.textContent="Established in 1974 by two brothers looking to bring world-class food to the area, Baker's Dozen has been producing quality baked goods for decades. We use only fresh, locally-sourced ingredients to provide unmatched taste for an affordable price. Check out our menu and see what all the fuss is about.",e.appendChild(t);const s=document.createElement("div");s.classList.add("image-container"),e.appendChild(s);const c=o(a);s.appendChild(c.e);const A=o(r);s.appendChild(A.e);const l=o(i);l.setOffset("bottom 44% right 50%"),s.appendChild(l.e);const d=document.createElement("div");d.classList.add("quote-container"),e.appendChild(d);const p=n('"Baker\'s Dozen has been the go-to spot for our family for over 20 years. We always feel so welcomed by the staff and owners and the food is fantastic."',"Janet Smith");d.appendChild(p.e);const u=n('"If someone were to ask me: "Where is the best bakery in town?", I\'d tell them it was here. Baker\'s Dozen has been making the same great food since I moved to the area 20 years ago."',"Thomas Lee");d.appendChild(u.e);const h=n('"Every weekend I bring my kids to this bakery as a treat. It absolutely makes their day - they love the food here."',"Simon Miller");d.appendChild(h.e)};let y=[];var v,x;v=((e,n,t,o,a=[])=>{const r=document.createElement("div");r.classList.add("menu-item-panel"),a.forEach((e=>{r.classList.add(e)}));const i=document.createElement("h2");i.classList.add("menu-item-panel-name"),r.appendChild(i);const s=e=>{i.textContent=`${e}`};s(e);const c=document.createElement("div");c.classList.add("menu-item-panel-description"),r.appendChild(c);const A=e=>{c.textContent=`"${e}"`};A(n);const l=document.createElement("h6");l.classList.add("menu-item-panel-calories"),r.appendChild(l);const d=e=>{l.textContent=`${e}kcal`};d(t);const p=document.createElement("h3");p.classList.add("menu-item-panel-price"),r.appendChild(p);const u=e=>{var n;p.textContent=`£${n=e,(Math.floor(n)/100).toFixed(2)}`};return u(o),{e:r,setName:s,setDescription:A,setCalories:d,setPrice:u}})("Cheesecake","testDesc","340","120"),x=o(i),y.push({panel:v,image:x}),y[y.length-1].image.setOffset("bottom 44% right 50%");const w=()=>{const e=document.querySelector(".content"),n=document.createElement("div");n.classList.add("menu-item-container"),e.appendChild(n);for(let e=0;e<y.length;e++)e%2!=0?(n.appendChild(y[e].panel.e),n.appendChild(y[e].image.e)):(n.appendChild(y[e].image.e),n.appendChild(y[e].panel.e))},E=()=>{document.querySelector(".content")};let S=[],k=1;const j=e=>{e<S.length&&e!=k&&(S[e].button.classList.add("current"),k=e,q(),L())},q=()=>{S.forEach((e=>{e.button.classList.remove("current")})),S[k].button.classList.add("current")},L=()=>{U(),console.log(S[k].content),S[k].content()},U=()=>{const e=document.querySelector(".content");if(e)for(;e.firstChild;)e.removeChild(e.lastChild)},z=()=>{const n=document.querySelector(".header");for(S=[];n.firstChild;)n.removeChild(n.lastChild);const t=document.createElement("h1");t.classList.add("company-name"),t.classList.add("no-select"),t.textContent="Baker's Dozen",n.appendChild(t);const o=document.createElement("nav");o.classList.add("navigation-bar"),n.appendChild(o),(()=>{S.push({button:e("Home",["nav-button-home"]),content:B}),S.push({button:e("Menu",["nav-button-menu"]),content:w}),S.push({button:e("Contact",["nav-button-contact"]),content:E});for(let e=0;e<S.length;e++)S[e].button.addEventListener("click",(()=>j(e)));q(),L()})(),S.forEach((e=>{o.appendChild(e.button)}))};var T=t(28),O={};O.styleTagTransform=C(),O.setAttributes=h(),O.insert=p().bind(null,"head"),O.domAPI=l(),O.insertStyleElement=f(),c()(T.Z,O),T.Z&&T.Z.locals&&T.Z.locals,(()=>{const e=document.createElement("div");e.id="page",document.body.appendChild(e);const n=document.createElement("div");n.classList.add("header"),e.appendChild(n);const t=document.createElement("div");t.classList.add("content"),e.appendChild(t),z()})()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,