(()=>{"use strict";var n={28:(n,e,t)=>{t.d(e,{Z:()=>s});var o=t(537),a=t.n(o),r=t(645),i=t.n(r)()(a());i.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Nunito:wght@300&family=Righteous&family=Staatliches&display=swap);"]),i.push([n.id,'/* Fonts */\n\n:root {\n    --nunito-font-family: Nunito, system-ui, "Segoe UI", Roboto, Helvetica, Arial,\n        sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";\n    --righteous-font-family: Righteous, system-ui, "Segoe UI", Roboto, Helvetica, Arial,\n        sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";\n    font-size: 20px;\n    --homepage-panel-max-columns: 3;\n    --homepage-panel-width: 400px;\n    --homepage-panel-gap: 20px;\n    --homepage-panel-border-radius: 10px;\n}\n\n.no-select {\n    -webkit-touch-callout: none;    /* iOS Safari */\n    -webkit-user-select: none;      /* Safari */\n    -khtml-user-select: none;       /* Konqueror HTML */\n    -moz-user-select: none;         /* Old versions of Firefox */\n    -ms-user-select: none;          /* Internet Explorer/Edge */\n    user-select: none;              /* Non-prefixed version, currently\n                                       supported by Chrome, Edge, Opera and Firefox */\n}\n\nh1, h2, h3, h4, h5, h6 {\n    padding: 0px;\n    margin: 0px;\n}\n\nbody {\n    font-family: Nunito, system-ui, "Segoe UI", Roboto, Helvetica, Arial,\n        sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";\n    font-family: var(--nunito-font-family);\n    margin: 0;\n    justify-content: center;\n    min-width: 100vw;\n    min-height: 100vh;\n    height: 100vh;\n}\n\n#page { \n    display: grid;\n    grid-template-rows: repeat(2, auto);\n    width: inherit;\n    height: 100vh;\n}\n\n.header {\n    grid-area: 1 / 1 / 2 / -1;\n    font-family: var(--righteous-font-family);\n    background-color: rgb(230, 6, 6);\n    padding: 20px;\n}\n\n.header .company-name {\n    grid-area: 1 / 1 / 2 / -1;\n    text-align: center;\n    font-size: 1.8rem;\n    white-space: nowrap;\n    color: white;\n}\n\n.header .navigation-bar {\n    grid-area: 2 / 1 / -1 / -1;\n    display: flex;\n    justify-content: center;\n    flex-wrap: nowrap;\n    gap: 12px;\n    padding-top: 30px;\n}\n\n.header .navigation-bar button {\n    flex-shrink: 0;\n    width: 6rem;\n    height: 1.6rem;\n    border-radius: 9999px;\n    font-family: var(--nunito-font-family);\n    font-size: 0.8rem;\n    font-weight: bold;\n    text-align: center;\n    vertical-align: center;\n    border: none;\n    background-color: rgb(245, 245, 245);\n}\n.header .navigation-bar button:hover {\n    outline: 2px solid rgb(255, 255, 255);\n    background-color: rgb(255, 255, 255);\n}\n.header .navigation-bar button:active {\n    background-color: rgb(221, 221, 221);\n}\n.header .navigation-bar button.current {\n    background-color: rgb(253, 185, 36);\n}\n\n.content {\n    grid-area: 2 / 1 / -1 / -1;\n    display: grid;\n    grid-template-rows: repeat(3, auto);\n    align-content: start;\n    background-color: #f8e8e8;\n    height: inherit;\n    z-index: 100;\n}\n\n.opening-line {\n    justify-self: center;\n    font-size: 1.0rem;\n    line-height: 1.2rem;\n    text-align: center;\n    font-weight: bold;\n    max-width: 1440px;\n    padding: 20px;\n}\n\n.image-container {\n    display: flex;\n    justify-content: center;\n    flex-wrap: nowrap;\n    gap: 20px;\n}\n\n.image-panel {\n    position: relative;\n    width: 324px;\n    height: 170px;\n    background-size: cover;\n    border-radius: 10px;\n    box-shadow: 0px 6px 5px rgba(60, 60, 60, 0.3);\n}\n\n.quote-container {\n    display: flex;\n    justify-content: center;\n    flex-wrap: nowrap;\n    padding: 20px;\n    gap: 20px;\n}\n\n.quote-panel {\n    flex-shrink: 0;\n    display: grid;\n    grid-template-rows: 1fr auto;\n    height: 270px;\n    width: 300px;\n    overflow: auto;\n    border-radius: 10px;\n    background-color: rgb(250, 250, 250);\n    box-shadow: 0px 6px 5px rgba(60, 60, 60, 0.3);\n    padding: 12px;\n}\n\n.quote-panel .quote-panel-quote {\n    font-style: italic;\n    font-size: 1.1rem;\n    line-height: 1.4rem;\n}\n\n.quote-panel .quote-panel-author {\n    font-size: 0.9rem;\n    text-align: end;\n}',"",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA,UAAU;;AAGV;IACI;4EACwE;IACxE;4EACwE;IACxE,eAAe;IACf,+BAA+B;IAC/B,6BAA6B;IAC7B,0BAA0B;IAC1B,oCAAoC;AACxC;;AAEA;IACI,2BAA2B,KAAK,eAAe;IAC/C,yBAAyB,OAAO,WAAW;IAC3C,wBAAwB,QAAQ,mBAAmB;IACnD,sBAAsB,UAAU,4BAA4B;IAC5D,qBAAqB,WAAW,2BAA2B;IAC3D,iBAAiB,eAAe;qFACiD;AACrF;;AAEA;IACI,YAAY;IACZ,WAAW;AACf;;AAEA;IACI;4EACwE;IACxE,sCAAsC;IACtC,SAAS;IACT,uBAAuB;IACvB,gBAAgB;IAChB,iBAAiB;IACjB,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,mCAAmC;IACnC,cAAc;IACd,aAAa;AACjB;;AAEA;IACI,yBAAyB;IACzB,yCAAyC;IACzC,gCAAgC;IAChC,aAAa;AACjB;;AAEA;IACI,yBAAyB;IACzB,kBAAkB;IAClB,iBAAiB;IACjB,mBAAmB;IACnB,YAAY;AAChB;;AAEA;IACI,0BAA0B;IAC1B,aAAa;IACb,uBAAuB;IACvB,iBAAiB;IACjB,SAAS;IACT,iBAAiB;AACrB;;AAEA;IACI,cAAc;IACd,WAAW;IACX,cAAc;IACd,qBAAqB;IACrB,sCAAsC;IACtC,iBAAiB;IACjB,iBAAiB;IACjB,kBAAkB;IAClB,sBAAsB;IACtB,YAAY;IACZ,oCAAoC;AACxC;AACA;IACI,qCAAqC;IACrC,oCAAoC;AACxC;AACA;IACI,oCAAoC;AACxC;AACA;IACI,mCAAmC;AACvC;;AAEA;IACI,0BAA0B;IAC1B,aAAa;IACb,mCAAmC;IACnC,oBAAoB;IACpB,yBAAyB;IACzB,eAAe;IACf,YAAY;AAChB;;AAEA;IACI,oBAAoB;IACpB,iBAAiB;IACjB,mBAAmB;IACnB,kBAAkB;IAClB,iBAAiB;IACjB,iBAAiB;IACjB,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,iBAAiB;IACjB,SAAS;AACb;;AAEA;IACI,kBAAkB;IAClB,YAAY;IACZ,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,6CAA6C;AACjD;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,iBAAiB;IACjB,aAAa;IACb,SAAS;AACb;;AAEA;IACI,cAAc;IACd,aAAa;IACb,4BAA4B;IAC5B,aAAa;IACb,YAAY;IACZ,cAAc;IACd,mBAAmB;IACnB,oCAAoC;IACpC,6CAA6C;IAC7C,aAAa;AACjB;;AAEA;IACI,kBAAkB;IAClB,iBAAiB;IACjB,mBAAmB;AACvB;;AAEA;IACI,iBAAiB;IACjB,eAAe;AACnB",sourcesContent:['/* Fonts */\n@import url(\'https://fonts.googleapis.com/css2?family=Nunito:wght@300&family=Righteous&family=Staatliches&display=swap\');\n\n:root {\n    --nunito-font-family: Nunito, system-ui, "Segoe UI", Roboto, Helvetica, Arial,\n        sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";\n    --righteous-font-family: Righteous, system-ui, "Segoe UI", Roboto, Helvetica, Arial,\n        sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";\n    font-size: 20px;\n    --homepage-panel-max-columns: 3;\n    --homepage-panel-width: 400px;\n    --homepage-panel-gap: 20px;\n    --homepage-panel-border-radius: 10px;\n}\n\n.no-select {\n    -webkit-touch-callout: none;    /* iOS Safari */\n    -webkit-user-select: none;      /* Safari */\n    -khtml-user-select: none;       /* Konqueror HTML */\n    -moz-user-select: none;         /* Old versions of Firefox */\n    -ms-user-select: none;          /* Internet Explorer/Edge */\n    user-select: none;              /* Non-prefixed version, currently\n                                       supported by Chrome, Edge, Opera and Firefox */\n}\n\nh1, h2, h3, h4, h5, h6 {\n    padding: 0px;\n    margin: 0px;\n}\n\nbody {\n    font-family: Nunito, system-ui, "Segoe UI", Roboto, Helvetica, Arial,\n        sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";\n    font-family: var(--nunito-font-family);\n    margin: 0;\n    justify-content: center;\n    min-width: 100vw;\n    min-height: 100vh;\n    height: 100vh;\n}\n\n#page { \n    display: grid;\n    grid-template-rows: repeat(2, auto);\n    width: inherit;\n    height: 100vh;\n}\n\n.header {\n    grid-area: 1 / 1 / 2 / -1;\n    font-family: var(--righteous-font-family);\n    background-color: rgb(230, 6, 6);\n    padding: 20px;\n}\n\n.header .company-name {\n    grid-area: 1 / 1 / 2 / -1;\n    text-align: center;\n    font-size: 1.8rem;\n    white-space: nowrap;\n    color: white;\n}\n\n.header .navigation-bar {\n    grid-area: 2 / 1 / -1 / -1;\n    display: flex;\n    justify-content: center;\n    flex-wrap: nowrap;\n    gap: 12px;\n    padding-top: 30px;\n}\n\n.header .navigation-bar button {\n    flex-shrink: 0;\n    width: 6rem;\n    height: 1.6rem;\n    border-radius: 9999px;\n    font-family: var(--nunito-font-family);\n    font-size: 0.8rem;\n    font-weight: bold;\n    text-align: center;\n    vertical-align: center;\n    border: none;\n    background-color: rgb(245, 245, 245);\n}\n.header .navigation-bar button:hover {\n    outline: 2px solid rgb(255, 255, 255);\n    background-color: rgb(255, 255, 255);\n}\n.header .navigation-bar button:active {\n    background-color: rgb(221, 221, 221);\n}\n.header .navigation-bar button.current {\n    background-color: rgb(253, 185, 36);\n}\n\n.content {\n    grid-area: 2 / 1 / -1 / -1;\n    display: grid;\n    grid-template-rows: repeat(3, auto);\n    align-content: start;\n    background-color: #f8e8e8;\n    height: inherit;\n    z-index: 100;\n}\n\n.opening-line {\n    justify-self: center;\n    font-size: 1.0rem;\n    line-height: 1.2rem;\n    text-align: center;\n    font-weight: bold;\n    max-width: 1440px;\n    padding: 20px;\n}\n\n.image-container {\n    display: flex;\n    justify-content: center;\n    flex-wrap: nowrap;\n    gap: 20px;\n}\n\n.image-panel {\n    position: relative;\n    width: 324px;\n    height: 170px;\n    background-size: cover;\n    border-radius: 10px;\n    box-shadow: 0px 6px 5px rgba(60, 60, 60, 0.3);\n}\n\n.quote-container {\n    display: flex;\n    justify-content: center;\n    flex-wrap: nowrap;\n    padding: 20px;\n    gap: 20px;\n}\n\n.quote-panel {\n    flex-shrink: 0;\n    display: grid;\n    grid-template-rows: 1fr auto;\n    height: 270px;\n    width: 300px;\n    overflow: auto;\n    border-radius: 10px;\n    background-color: rgb(250, 250, 250);\n    box-shadow: 0px 6px 5px rgba(60, 60, 60, 0.3);\n    padding: 12px;\n}\n\n.quote-panel .quote-panel-quote {\n    font-style: italic;\n    font-size: 1.1rem;\n    line-height: 1.4rem;\n}\n\n.quote-panel .quote-panel-author {\n    font-size: 0.9rem;\n    text-align: end;\n}'],sourceRoot:""}]);const s=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,a,r){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(o)for(var s=0;s<this.length;s++){var A=this[s][0];null!=A&&(i[A]=!0)}for(var c=0;c<n.length;c++){var l=[].concat(n[c]);o&&i[l[0]]||(void 0!==r&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=r),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),a&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=a):l[4]="".concat(a)),e.push(l))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),r="/*# ".concat(a," */");return[e].concat([r]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var r={},i=[],s=0;s<n.length;s++){var A=n[s],c=o.base?A[0]+o.base:A[0],l=r[c]||0,d="".concat(c," ").concat(l);r[c]=l+1;var p=t(d),u={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var h=a(u,o);o.byIndex=s,e.splice(s,0,{identifier:d,updater:h,references:1})}i.push(d)}return i}function a(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,a){var r=o(n=n||[],a=a||{});return function(n){n=n||[];for(var i=0;i<r.length;i++){var s=t(r[i]);e[s].references--}for(var A=o(n,a),c=0;c<r.length;c++){var l=t(r[c]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}r=A}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,a&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var r=t.sourceMap;r&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var a=e[o];if(void 0!==a)return a.exports;var r=e[o]={id:o,exports:{}};return n[o](r,r.exports,t),r.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var o=e.getElementsByTagName("script");if(o.length)for(var a=o.length-1;a>-1&&!n;)n=o[a--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.nc=void 0,(()=>{const n=(n,e)=>{const t=document.createElement("button");return t.classList.add("header-nav-button"),e.forEach((n=>{t.classList.add(n)})),t.textContent=n,t},e=(n,e)=>{n.childNodes[0].textContent=e},o=(n,e)=>{n.childNodes[1].textContent=`- ${e}`},a=()=>{const n=document.createElement("div");n.classList.add("quote-panel");const e=document.createElement("div");e.classList.add("quote-panel-quote"),n.appendChild(e);const t=document.createElement("div");return t.classList.add("quote-panel-author"),n.appendChild(t),n},r=n=>{const e=document.createElement("div");return e.classList.add("image-panel"),e.style.backgroundImage=`url(${n})`,e},i=t.p+"b214bb5a9875661dcb84.jpg",s=t.p+"8ad311f0ee65f73faa80.jpg",A=t.p+"88f410b70d52f903d64a.jpg",c=()=>{const n=document.querySelector(".content"),t=document.createElement("div");t.classList.add("opening-line"),t.textContent="Established in 1974 by two brothers looking to bring world-class food to the area, Baker's Dozen has been producing quality baked goods for decades. We use only fresh, locally-sourced ingredients to provide unmatched taste for an affordable price. Check out our menu and see what all the fuss is about.",n.appendChild(t);const c=document.createElement("div");c.classList.add("image-container"),n.appendChild(c);const l=r(i);c.appendChild(l);const d=r(s);c.appendChild(d);const p=r(A);p.style.backgroundPosition="bottom 44% right 50%",c.appendChild(p);const u=document.createElement("div");u.classList.add("quote-container"),n.appendChild(u);const h=a();e(h,'"Baker\'s Dozen has been the go-to spot for our family for over 20 years. We always feel so welcomed by the staff and owners and the food is fantastic."'),o(h,"Janet Smith"),u.appendChild(h);const m=a();e(m,'"If someone were to ask me: "Where is the best bakery in town?", I\'d tell them it was here. Baker\'s Dozen has been making the same great food since I moved to the area 20 years ago."'),o(m,"Thomas Lee"),u.appendChild(m);const g=a();e(g,'"Every weekend I bring my kids to this bakery as a treat. It absolutely makes their day - they love the food here."'),o(g,"Simon Miller"),u.appendChild(g)};let l=[];var d,p;d=((n,e,t,o)=>{const a=document.createElement("div");a.classList.add("menu-item-panel");const r=document.createElement("h2");r.classList.add("menu-item-panel-name"),a.appendChild(r);const i=n=>{r.textContent=`${n}`};i("Cheesecake");const s=document.createElement("div");s.classList.add("menu-item-panel-description"),a.appendChild(s);const A=n=>{s.textContent=`"${n}"`};A("testDesc");const c=document.createElement("h6");c.classList.add("menu-item-panel-calories"),a.appendChild(c);const l=n=>{c.textContent=`${n}kcal`};l("340");const d=document.createElement("h3");d.classList.add("menu-item-panel-price"),a.appendChild(d);const p=n=>{var e;d.textContent=`£${e=n,(Math.floor(e)/100).toFixed(2)}`};return p("120"),{e:a,setName:i,setDescription:A,setCalories:l,setPrice:p}})(),p=r(A),l.push({panel:d,image:p});const u=()=>{const n=document.querySelector(".content"),e=document.createElement("div");e.classList.add("menu-item-container"),n.appendChild(e);for(let n=0;n<l.length;n++)n%2!=0?(e.appendChild(l[n].panel.e),e.appendChild(l[n].image)):(e.appendChild(l[n].image),e.appendChild(l[n].panel.e))},h=()=>{document.querySelector(".content")};let m=[],g=0;const C=n=>{n<m.length&&n!=g&&(m[n].button.classList.add("current"),g=n,f(),b())},f=()=>{m.forEach((n=>{n.button.classList.remove("current")})),m[g].button.classList.add("current")},b=()=>{B(),console.log(m[g].content),m[g].content()},B=()=>{const n=document.querySelector(".content");if(n)for(;n.firstChild;)n.removeChild(n.lastChild)},I=()=>{const e=document.querySelector(".header");for(m=[];e.firstChild;)e.removeChild(e.lastChild);const t=document.createElement("h1");t.classList.add("company-name"),t.classList.add("no-select"),t.textContent="Baker's Dozen",e.appendChild(t);const o=document.createElement("nav");o.classList.add("navigation-bar"),e.appendChild(o),(()=>{m.push({button:n("Home",["nav-button-home"]),content:c}),m.push({button:n("Menu",["nav-button-menu"]),content:u}),m.push({button:n("Contact",["nav-button-contact"]),content:h});for(let n=0;n<m.length;n++)m[n].button.addEventListener("click",(()=>C(n)));f(),b()})(),m.forEach((n=>{o.appendChild(n.button)}))};var y=t(379),v=t.n(y),x=t(795),w=t.n(x),E=t(569),S=t.n(E),k=t(565),j=t.n(k),q=t(216),L=t.n(q),z=t(589),U=t.n(z),N=t(28),T={};T.styleTagTransform=U(),T.setAttributes=j(),T.insert=S().bind(null,"head"),T.domAPI=w(),T.insertStyleElement=L(),v()(N.Z,T),N.Z&&N.Z.locals&&N.Z.locals,(()=>{const n=document.createElement("div");n.id="page",document.body.appendChild(n);const e=document.createElement("div");e.classList.add("header"),n.appendChild(e);const t=document.createElement("div");t.classList.add("content"),n.appendChild(t),I()})()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,