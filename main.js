(()=>{"use strict";var n={28:(n,e,t)=>{t.d(e,{Z:()=>s});var o=t(537),r=t.n(o),a=t(645),i=t.n(a)()(r());i.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Nunito:wght@300&family=Righteous&family=Staatliches&display=swap);"]),i.push([n.id,'/* Fonts */\n\n:root {\n    --nunito-font-family: Nunito, system-ui, "Segoe UI", Roboto, Helvetica, Arial,\n        sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";\n    --righteous-font-family: Righteous, system-ui, "Segoe UI", Roboto, Helvetica, Arial,\n        sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";\n    font-size: 20px;\n}\n\n.no-select {\n    -webkit-touch-callout: none;    /* iOS Safari */\n    -webkit-user-select: none;      /* Safari */\n    -khtml-user-select: none;       /* Konqueror HTML */\n    -moz-user-select: none;         /* Old versions of Firefox */\n    -ms-user-select: none;          /* Internet Explorer/Edge */\n    user-select: none;              /* Non-prefixed version, currently\n                                       supported by Chrome, Edge, Opera and Firefox */\n}\n\nh1, h2, h3, h4, h5, h6 {\n    padding: 0px;\n    margin: 0px;\n}\n\nbody {\n    font-family: Nunito, system-ui, "Segoe UI", Roboto, Helvetica, Arial,\n        sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";\n    font-family: var(--nunito-font-family);\n    margin: 0;\n    justify-content: center;\n    min-width: 100vw;\n    min-height: 100vh;\n    height: 100vh;\n}\n\n#content { \n    display: grid;\n    grid-template-areas: auto 1fr / auto 1fr;\n}\n\n.header {\n    grid-area: 1 / 1 / 2 / -1;\n    display: "grid";\n    grid-template-areas: repeat(2, auto) / 1fr;\n    font-family: var(--righteous-font-family);\n    background-color: rgb(230, 6, 6);\n    box-shadow: 6px 6px 5px rgba(60, 60, 60, 0.3);\n    padding: 20px;\n}\n\n.header .company-name {\n    grid-area: 1 / 1 / 2 / -1;\n    text-align: center;\n    font-size: 1.8rem;\n    color: white;\n}\n\n.header .navigation-bar {\n    grid-area: 2 / 1 / -1 / -1;\n    display: flex;\n    justify-content: center;\n    gap: 12px;\n    padding-top: 30px;\n}\n\n.header .navigation-bar button {\n    width: 6rem;\n    height: 1.6rem;\n    border-radius: 9999px;\n    font-family: var(--nunito-font-family);\n    font-size: 0.8rem;\n    font-weight: bold;\n    text-align: center;\n    vertical-align: center;\n    border: none;\n    background-color: rgb(245, 245, 245);\n}\n.header .navigation-bar button:hover {\n    outline: 2px solid rgb(255, 255, 255);\n    background-color: rgb(255, 255, 255);\n}\n.header .navigation-bar button:active {\n    background-color: rgb(221, 221, 221);\n}\n\n.sidebar {\n    grid-area: 2 / 1 / -1 / 2;\n}\n\n.main {\n    grid-area: 2 / 2 / -1 / -1;\n}',"",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA,UAAU;;AAGV;IACI;4EACwE;IACxE;4EACwE;IACxE,eAAe;AACnB;;AAEA;IACI,2BAA2B,KAAK,eAAe;IAC/C,yBAAyB,OAAO,WAAW;IAC3C,wBAAwB,QAAQ,mBAAmB;IACnD,sBAAsB,UAAU,4BAA4B;IAC5D,qBAAqB,WAAW,2BAA2B;IAC3D,iBAAiB,eAAe;qFACiD;AACrF;;AAEA;IACI,YAAY;IACZ,WAAW;AACf;;AAEA;IACI;4EACwE;IACxE,sCAAsC;IACtC,SAAS;IACT,uBAAuB;IACvB,gBAAgB;IAChB,iBAAiB;IACjB,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,wCAAwC;AAC5C;;AAEA;IACI,yBAAyB;IACzB,eAAe;IACf,0CAA0C;IAC1C,yCAAyC;IACzC,gCAAgC;IAChC,6CAA6C;IAC7C,aAAa;AACjB;;AAEA;IACI,yBAAyB;IACzB,kBAAkB;IAClB,iBAAiB;IACjB,YAAY;AAChB;;AAEA;IACI,0BAA0B;IAC1B,aAAa;IACb,uBAAuB;IACvB,SAAS;IACT,iBAAiB;AACrB;;AAEA;IACI,WAAW;IACX,cAAc;IACd,qBAAqB;IACrB,sCAAsC;IACtC,iBAAiB;IACjB,iBAAiB;IACjB,kBAAkB;IAClB,sBAAsB;IACtB,YAAY;IACZ,oCAAoC;AACxC;AACA;IACI,qCAAqC;IACrC,oCAAoC;AACxC;AACA;IACI,oCAAoC;AACxC;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,0BAA0B;AAC9B",sourcesContent:['/* Fonts */\n@import url(\'https://fonts.googleapis.com/css2?family=Nunito:wght@300&family=Righteous&family=Staatliches&display=swap\');\n\n:root {\n    --nunito-font-family: Nunito, system-ui, "Segoe UI", Roboto, Helvetica, Arial,\n        sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";\n    --righteous-font-family: Righteous, system-ui, "Segoe UI", Roboto, Helvetica, Arial,\n        sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";\n    font-size: 20px;\n}\n\n.no-select {\n    -webkit-touch-callout: none;    /* iOS Safari */\n    -webkit-user-select: none;      /* Safari */\n    -khtml-user-select: none;       /* Konqueror HTML */\n    -moz-user-select: none;         /* Old versions of Firefox */\n    -ms-user-select: none;          /* Internet Explorer/Edge */\n    user-select: none;              /* Non-prefixed version, currently\n                                       supported by Chrome, Edge, Opera and Firefox */\n}\n\nh1, h2, h3, h4, h5, h6 {\n    padding: 0px;\n    margin: 0px;\n}\n\nbody {\n    font-family: Nunito, system-ui, "Segoe UI", Roboto, Helvetica, Arial,\n        sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";\n    font-family: var(--nunito-font-family);\n    margin: 0;\n    justify-content: center;\n    min-width: 100vw;\n    min-height: 100vh;\n    height: 100vh;\n}\n\n#content { \n    display: grid;\n    grid-template-areas: auto 1fr / auto 1fr;\n}\n\n.header {\n    grid-area: 1 / 1 / 2 / -1;\n    display: "grid";\n    grid-template-areas: repeat(2, auto) / 1fr;\n    font-family: var(--righteous-font-family);\n    background-color: rgb(230, 6, 6);\n    box-shadow: 6px 6px 5px rgba(60, 60, 60, 0.3);\n    padding: 20px;\n}\n\n.header .company-name {\n    grid-area: 1 / 1 / 2 / -1;\n    text-align: center;\n    font-size: 1.8rem;\n    color: white;\n}\n\n.header .navigation-bar {\n    grid-area: 2 / 1 / -1 / -1;\n    display: flex;\n    justify-content: center;\n    gap: 12px;\n    padding-top: 30px;\n}\n\n.header .navigation-bar button {\n    width: 6rem;\n    height: 1.6rem;\n    border-radius: 9999px;\n    font-family: var(--nunito-font-family);\n    font-size: 0.8rem;\n    font-weight: bold;\n    text-align: center;\n    vertical-align: center;\n    border: none;\n    background-color: rgb(245, 245, 245);\n}\n.header .navigation-bar button:hover {\n    outline: 2px solid rgb(255, 255, 255);\n    background-color: rgb(255, 255, 255);\n}\n.header .navigation-bar button:active {\n    background-color: rgb(221, 221, 221);\n}\n\n.sidebar {\n    grid-area: 2 / 1 / -1 / 2;\n}\n\n.main {\n    grid-area: 2 / 2 / -1 / -1;\n}'],sourceRoot:""}]);const s=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(o)for(var s=0;s<this.length;s++){var A=this[s][0];null!=A&&(i[A]=!0)}for(var c=0;c<n.length;c++){var l=[].concat(n[c]);o&&i[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),e.push(l))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var a={},i=[],s=0;s<n.length;s++){var A=n[s],c=o.base?A[0]+o.base:A[0],l=a[c]||0,d="".concat(c," ").concat(l);a[c]=l+1;var u=t(d),p={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==u)e[u].references++,e[u].updater(p);else{var f=r(p,o);o.byIndex=s,e.splice(s,0,{identifier:d,updater:f,references:1})}i.push(d)}return i}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var a=o(n=n||[],r=r||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var s=t(a[i]);e[s].references--}for(var A=o(n,r),c=0;c<a.length;c++){var l=t(a[c]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}a=A}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var a=e[o]={id:o,exports:{}};return n[o](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{const n=()=>{const n=document.createElement("button");return n.classList.add("header-nav-button"),n};var e=t(379),o=t.n(e),r=t(795),a=t.n(r),i=t(569),s=t.n(i),A=t(565),c=t.n(A),l=t(216),d=t.n(l),u=t(589),p=t.n(u),f=t(28),m={};m.styleTagTransform=p(),m.setAttributes=c(),m.insert=s().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=d(),o()(f.Z,m),f.Z&&f.Z.locals&&f.Z.locals,(()=>{const n=document.createElement("div");n.id="#content",document.body.appendChild(n);const e=document.createElement("div");e.classList.add("header"),n.appendChild(e);const t=document.createElement("div");t.classList.add("sidebar"),n.appendChild(t);const o=document.createElement("div");o.classList.add("main"),n.appendChild(o)})(),(()=>{const e=document.querySelector(".header"),t=document.createElement("h1");t.classList.add("company-name"),t.textContent="Baker's Dozen",e.appendChild(t);const o=document.createElement("nav");o.classList.add("navigation-bar"),e.appendChild(o);const r=n();r.classList.add("nav-button-home"),r.textContent="Home",o.appendChild(r);const a=n();a.classList.add("nav-button-menu"),a.textContent="Menu",o.appendChild(a);const i=n();i.classList.add("nav-button-contact"),i.textContent="Contact",o.appendChild(i)})()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,