(()=>{"use strict";var n={128:(n,e,t)=>{t.d(e,{Z:()=>s});var o=t(537),a=t.n(o),i=t(645),r=t.n(i)()(a());r.push([n.id,".contact-content-container {\n    margin: auto;\n    display: grid;\n    grid-template-rows: repeat(3, auto);\n    justify-content: center;\n    width: 1000px;\n    padding: 20px;\n    gap: 20px;\n}\n\n.opening-times-container {\n    border-radius: 10px;\n    background-color: rgb(250, 250, 250);\n    box-shadow: 0px 6px 5px rgba(60, 60, 60, 0.3);\n    padding: 20px 60px;\n}\n\n.opening-times-title {\n    text-align: center;\n    padding-bottom: 10px;\n}\n\n.opening-times-panel-day {\n    display: flex;\n    justify-content: center;\n    flex-wrap: nowrap;\n    gap: 1ch;\n    font-size: 1.0rem;\n}\n\n.opening-times-panel-day .opening-times-panel-day-name {\n    font-weight: bold;\n}\n","",{version:3,sources:["webpack://./src/content/content-contact-styles.lazy.css"],names:[],mappings:"AAAA;IACI,YAAY;IACZ,aAAa;IACb,mCAAmC;IACnC,uBAAuB;IACvB,aAAa;IACb,aAAa;IACb,SAAS;AACb;;AAEA;IACI,mBAAmB;IACnB,oCAAoC;IACpC,6CAA6C;IAC7C,kBAAkB;AACtB;;AAEA;IACI,kBAAkB;IAClB,oBAAoB;AACxB;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,iBAAiB;IACjB,QAAQ;IACR,iBAAiB;AACrB;;AAEA;IACI,iBAAiB;AACrB",sourcesContent:[".contact-content-container {\n    margin: auto;\n    display: grid;\n    grid-template-rows: repeat(3, auto);\n    justify-content: center;\n    width: 1000px;\n    padding: 20px;\n    gap: 20px;\n}\n\n.opening-times-container {\n    border-radius: 10px;\n    background-color: rgb(250, 250, 250);\n    box-shadow: 0px 6px 5px rgba(60, 60, 60, 0.3);\n    padding: 20px 60px;\n}\n\n.opening-times-title {\n    text-align: center;\n    padding-bottom: 10px;\n}\n\n.opening-times-panel-day {\n    display: flex;\n    justify-content: center;\n    flex-wrap: nowrap;\n    gap: 1ch;\n    font-size: 1.0rem;\n}\n\n.opening-times-panel-day .opening-times-panel-day-name {\n    font-weight: bold;\n}\n"],sourceRoot:""}]);const s=r},846:(n,e,t)=>{t.d(e,{Z:()=>s});var o=t(537),a=t.n(o),i=t(645),r=t.n(i)()(a());r.push([n.id,".home-content-container {\n    display: grid;\n    grid-template-rows: repeat(3, auto);\n    align-content: start;\n}\n\n.opening-line {\n    justify-self: center;\n    font-size: 1.0rem;\n    line-height: 1.2rem;\n    text-align: center;\n    font-weight: bold;\n    max-width: 1440px;\n    padding: 20px;\n}\n\n.image-container {\n    display: flex;\n    justify-content: center;\n    flex-wrap: nowrap;\n    gap: 20px;\n}\n\n.image-panel {\n    position: relative;\n    width: 324px;\n    height: 170px;\n    background-size: cover;\n    border-radius: 10px;\n    box-shadow: 0px 6px 5px rgba(60, 60, 60, 0.3);\n}\n\n.quote-container {\n    display: flex;\n    justify-content: center;\n    flex-wrap: nowrap;\n    padding: 20px;\n    gap: 20px;\n}\n\n.quote-panel {\n    flex-shrink: 0;\n    display: grid;\n    grid-template-rows: 1fr auto;\n    height: 270px;\n    width: 300px;\n    overflow: auto;\n    border-radius: 10px;\n    background-color: rgb(250, 250, 250);\n    box-shadow: 0px 6px 5px rgba(60, 60, 60, 0.3);\n    padding: 12px;\n}\n\n.quote-panel .quote-panel-quote {\n    font-style: italic;\n    font-size: 1.1rem;\n    line-height: 1.4rem;\n}\n\n.quote-panel .quote-panel-author {\n    font-size: 0.9rem;\n    text-align: end;\n}","",{version:3,sources:["webpack://./src/content/content-home-styles.lazy.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,mCAAmC;IACnC,oBAAoB;AACxB;;AAEA;IACI,oBAAoB;IACpB,iBAAiB;IACjB,mBAAmB;IACnB,kBAAkB;IAClB,iBAAiB;IACjB,iBAAiB;IACjB,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,iBAAiB;IACjB,SAAS;AACb;;AAEA;IACI,kBAAkB;IAClB,YAAY;IACZ,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,6CAA6C;AACjD;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,iBAAiB;IACjB,aAAa;IACb,SAAS;AACb;;AAEA;IACI,cAAc;IACd,aAAa;IACb,4BAA4B;IAC5B,aAAa;IACb,YAAY;IACZ,cAAc;IACd,mBAAmB;IACnB,oCAAoC;IACpC,6CAA6C;IAC7C,aAAa;AACjB;;AAEA;IACI,kBAAkB;IAClB,iBAAiB;IACjB,mBAAmB;AACvB;;AAEA;IACI,iBAAiB;IACjB,eAAe;AACnB",sourcesContent:[".home-content-container {\n    display: grid;\n    grid-template-rows: repeat(3, auto);\n    align-content: start;\n}\n\n.opening-line {\n    justify-self: center;\n    font-size: 1.0rem;\n    line-height: 1.2rem;\n    text-align: center;\n    font-weight: bold;\n    max-width: 1440px;\n    padding: 20px;\n}\n\n.image-container {\n    display: flex;\n    justify-content: center;\n    flex-wrap: nowrap;\n    gap: 20px;\n}\n\n.image-panel {\n    position: relative;\n    width: 324px;\n    height: 170px;\n    background-size: cover;\n    border-radius: 10px;\n    box-shadow: 0px 6px 5px rgba(60, 60, 60, 0.3);\n}\n\n.quote-container {\n    display: flex;\n    justify-content: center;\n    flex-wrap: nowrap;\n    padding: 20px;\n    gap: 20px;\n}\n\n.quote-panel {\n    flex-shrink: 0;\n    display: grid;\n    grid-template-rows: 1fr auto;\n    height: 270px;\n    width: 300px;\n    overflow: auto;\n    border-radius: 10px;\n    background-color: rgb(250, 250, 250);\n    box-shadow: 0px 6px 5px rgba(60, 60, 60, 0.3);\n    padding: 12px;\n}\n\n.quote-panel .quote-panel-quote {\n    font-style: italic;\n    font-size: 1.1rem;\n    line-height: 1.4rem;\n}\n\n.quote-panel .quote-panel-author {\n    font-size: 0.9rem;\n    text-align: end;\n}"],sourceRoot:""}]);const s=r},966:(n,e,t)=>{t.d(e,{Z:()=>s});var o=t(537),a=t.n(o),i=t(645),r=t.n(i)()(a());r.push([n.id,".menu-content-container {\n    margin: auto;\n    display: flex;\n    justify-content: center;\n    flex-wrap: wrap;\n    width: 1000px;\n    padding: 20px;\n    gap: 20px;\n}\n\n.image-panel {\n    position: relative;\n    width: 324px;\n    height: auto;\n    background-size: cover;\n    border-radius: 10px;\n    box-shadow: 0px 6px 5px rgba(60, 60, 60, 0.3);\n}\n\n.menu-item-panel {\n    flex-shrink: 0;\n    display: grid;\n    grid-template-rows: auto 1fr repeat(2, auto);\n    width: 600px;\n    min-height: 200px;\n    overflow: auto;\n    border-radius: 10px;\n    background-color: rgb(250, 250, 250);\n    box-shadow: 0px 6px 5px rgba(60, 60, 60, 0.3);\n    padding: 12px;\n}\n\n.menu-item-panel .menu-item-panel-name {\n    font-size: 1.5rem;\n}\n.menu-item-panel .menu-item-panel-description {\n    font-size: 1.0rem;\n    font-style: italic;\n}\n.menu-item-panel .menu-item-panel-calories {\n    font-size: 0.7rem;\n}\n.menu-item-panel .menu-item-panel-price {\n    font-size: 1.2rem;\n}","",{version:3,sources:["webpack://./src/content/content-menu-styles.lazy.css"],names:[],mappings:"AAAA;IACI,YAAY;IACZ,aAAa;IACb,uBAAuB;IACvB,eAAe;IACf,aAAa;IACb,aAAa;IACb,SAAS;AACb;;AAEA;IACI,kBAAkB;IAClB,YAAY;IACZ,YAAY;IACZ,sBAAsB;IACtB,mBAAmB;IACnB,6CAA6C;AACjD;;AAEA;IACI,cAAc;IACd,aAAa;IACb,4CAA4C;IAC5C,YAAY;IACZ,iBAAiB;IACjB,cAAc;IACd,mBAAmB;IACnB,oCAAoC;IACpC,6CAA6C;IAC7C,aAAa;AACjB;;AAEA;IACI,iBAAiB;AACrB;AACA;IACI,iBAAiB;IACjB,kBAAkB;AACtB;AACA;IACI,iBAAiB;AACrB;AACA;IACI,iBAAiB;AACrB",sourcesContent:[".menu-content-container {\n    margin: auto;\n    display: flex;\n    justify-content: center;\n    flex-wrap: wrap;\n    width: 1000px;\n    padding: 20px;\n    gap: 20px;\n}\n\n.image-panel {\n    position: relative;\n    width: 324px;\n    height: auto;\n    background-size: cover;\n    border-radius: 10px;\n    box-shadow: 0px 6px 5px rgba(60, 60, 60, 0.3);\n}\n\n.menu-item-panel {\n    flex-shrink: 0;\n    display: grid;\n    grid-template-rows: auto 1fr repeat(2, auto);\n    width: 600px;\n    min-height: 200px;\n    overflow: auto;\n    border-radius: 10px;\n    background-color: rgb(250, 250, 250);\n    box-shadow: 0px 6px 5px rgba(60, 60, 60, 0.3);\n    padding: 12px;\n}\n\n.menu-item-panel .menu-item-panel-name {\n    font-size: 1.5rem;\n}\n.menu-item-panel .menu-item-panel-description {\n    font-size: 1.0rem;\n    font-style: italic;\n}\n.menu-item-panel .menu-item-panel-calories {\n    font-size: 0.7rem;\n}\n.menu-item-panel .menu-item-panel-price {\n    font-size: 1.2rem;\n}"],sourceRoot:""}]);const s=r},28:(n,e,t)=>{t.d(e,{Z:()=>s});var o=t(537),a=t.n(o),i=t(645),r=t.n(i)()(a());r.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Nunito:wght@300&family=Righteous&family=Staatliches&display=swap);"]),r.push([n.id,'/* Fonts */\n\n:root {\n    --nunito-font-family: Nunito, system-ui, "Segoe UI", Roboto, Helvetica, Arial,\n        sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";\n    --righteous-font-family: Righteous, system-ui, "Segoe UI", Roboto, Helvetica, Arial,\n        sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";\n    font-size: 20px;\n}\n\n.no-select {\n    -webkit-touch-callout: none;    /* iOS Safari */\n    -webkit-user-select: none;      /* Safari */\n    -khtml-user-select: none;       /* Konqueror HTML */\n    -moz-user-select: none;         /* Old versions of Firefox */\n    -ms-user-select: none;          /* Internet Explorer/Edge */\n    user-select: none;              /* Non-prefixed version, currently\n                                       supported by Chrome, Edge, Opera and Firefox */\n}\n\nh1, h2, h3, h4, h5, h6 {\n    padding: 0px;\n    margin: 0px;\n}\n\nbody {\n    font-family: Nunito, system-ui, "Segoe UI", Roboto, Helvetica, Arial,\n        sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";\n    font-family: var(--nunito-font-family);\n    margin: 0;\n    justify-content: center;\n    min-width: 100vw;\n    min-height: 100vh;\n    height: 100vh;\n}\n\n#page { \n    display: grid;\n    grid-template-rows: auto 1fr;\n    width: inherit;\n    height: 100vh;\n}\n\n.header {\n    grid-area: 1 / 1 / 2 / -1;\n    font-family: var(--righteous-font-family);\n    background-color: rgb(230, 6, 6);\n    padding: 20px;\n}\n\n.header .company-name {\n    grid-area: 1 / 1 / 2 / -1;\n    text-align: center;\n    font-size: 1.8rem;\n    white-space: nowrap;\n    color: white;\n}\n\n.header .navigation-bar {\n    grid-area: 2 / 1 / -1 / -1;\n    display: flex;\n    justify-content: center;\n    flex-wrap: nowrap;\n    gap: 12px;\n    padding-top: 30px;\n}\n\n.header .navigation-bar button {\n    flex-shrink: 0;\n    width: 6rem;\n    height: 1.6rem;\n    border-radius: 9999px;\n    font-family: var(--nunito-font-family);\n    font-size: 0.8rem;\n    font-weight: bold;\n    text-align: center;\n    vertical-align: center;\n    border: none;\n    background-color: rgb(245, 245, 245);\n}\n.header .navigation-bar button:hover {\n    outline: 2px solid rgb(255, 255, 255);\n    background-color: rgb(255, 255, 255);\n}\n.header .navigation-bar button:active {\n    background-color: rgb(221, 221, 221);\n}\n.header .navigation-bar button.current {\n    background-color: rgb(253, 185, 36);\n}\n\n.content {\n    grid-area: 2 / 1 / -1 / -1;\n    background-color: #f8e8e8;\n}',"",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA,UAAU;;AAGV;IACI;4EACwE;IACxE;4EACwE;IACxE,eAAe;AACnB;;AAEA;IACI,2BAA2B,KAAK,eAAe;IAC/C,yBAAyB,OAAO,WAAW;IAC3C,wBAAwB,QAAQ,mBAAmB;IACnD,sBAAsB,UAAU,4BAA4B;IAC5D,qBAAqB,WAAW,2BAA2B;IAC3D,iBAAiB,eAAe;qFACiD;AACrF;;AAEA;IACI,YAAY;IACZ,WAAW;AACf;;AAEA;IACI;4EACwE;IACxE,sCAAsC;IACtC,SAAS;IACT,uBAAuB;IACvB,gBAAgB;IAChB,iBAAiB;IACjB,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,4BAA4B;IAC5B,cAAc;IACd,aAAa;AACjB;;AAEA;IACI,yBAAyB;IACzB,yCAAyC;IACzC,gCAAgC;IAChC,aAAa;AACjB;;AAEA;IACI,yBAAyB;IACzB,kBAAkB;IAClB,iBAAiB;IACjB,mBAAmB;IACnB,YAAY;AAChB;;AAEA;IACI,0BAA0B;IAC1B,aAAa;IACb,uBAAuB;IACvB,iBAAiB;IACjB,SAAS;IACT,iBAAiB;AACrB;;AAEA;IACI,cAAc;IACd,WAAW;IACX,cAAc;IACd,qBAAqB;IACrB,sCAAsC;IACtC,iBAAiB;IACjB,iBAAiB;IACjB,kBAAkB;IAClB,sBAAsB;IACtB,YAAY;IACZ,oCAAoC;AACxC;AACA;IACI,qCAAqC;IACrC,oCAAoC;AACxC;AACA;IACI,oCAAoC;AACxC;AACA;IACI,mCAAmC;AACvC;;AAEA;IACI,0BAA0B;IAC1B,yBAAyB;AAC7B",sourcesContent:['/* Fonts */\n@import url(\'https://fonts.googleapis.com/css2?family=Nunito:wght@300&family=Righteous&family=Staatliches&display=swap\');\n\n:root {\n    --nunito-font-family: Nunito, system-ui, "Segoe UI", Roboto, Helvetica, Arial,\n        sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";\n    --righteous-font-family: Righteous, system-ui, "Segoe UI", Roboto, Helvetica, Arial,\n        sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";\n    font-size: 20px;\n}\n\n.no-select {\n    -webkit-touch-callout: none;    /* iOS Safari */\n    -webkit-user-select: none;      /* Safari */\n    -khtml-user-select: none;       /* Konqueror HTML */\n    -moz-user-select: none;         /* Old versions of Firefox */\n    -ms-user-select: none;          /* Internet Explorer/Edge */\n    user-select: none;              /* Non-prefixed version, currently\n                                       supported by Chrome, Edge, Opera and Firefox */\n}\n\nh1, h2, h3, h4, h5, h6 {\n    padding: 0px;\n    margin: 0px;\n}\n\nbody {\n    font-family: Nunito, system-ui, "Segoe UI", Roboto, Helvetica, Arial,\n        sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";\n    font-family: var(--nunito-font-family);\n    margin: 0;\n    justify-content: center;\n    min-width: 100vw;\n    min-height: 100vh;\n    height: 100vh;\n}\n\n#page { \n    display: grid;\n    grid-template-rows: auto 1fr;\n    width: inherit;\n    height: 100vh;\n}\n\n.header {\n    grid-area: 1 / 1 / 2 / -1;\n    font-family: var(--righteous-font-family);\n    background-color: rgb(230, 6, 6);\n    padding: 20px;\n}\n\n.header .company-name {\n    grid-area: 1 / 1 / 2 / -1;\n    text-align: center;\n    font-size: 1.8rem;\n    white-space: nowrap;\n    color: white;\n}\n\n.header .navigation-bar {\n    grid-area: 2 / 1 / -1 / -1;\n    display: flex;\n    justify-content: center;\n    flex-wrap: nowrap;\n    gap: 12px;\n    padding-top: 30px;\n}\n\n.header .navigation-bar button {\n    flex-shrink: 0;\n    width: 6rem;\n    height: 1.6rem;\n    border-radius: 9999px;\n    font-family: var(--nunito-font-family);\n    font-size: 0.8rem;\n    font-weight: bold;\n    text-align: center;\n    vertical-align: center;\n    border: none;\n    background-color: rgb(245, 245, 245);\n}\n.header .navigation-bar button:hover {\n    outline: 2px solid rgb(255, 255, 255);\n    background-color: rgb(255, 255, 255);\n}\n.header .navigation-bar button:active {\n    background-color: rgb(221, 221, 221);\n}\n.header .navigation-bar button.current {\n    background-color: rgb(253, 185, 36);\n}\n\n.content {\n    grid-area: 2 / 1 / -1 / -1;\n    background-color: #f8e8e8;\n}'],sourceRoot:""}]);const s=r},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,a,i){"string"==typeof n&&(n=[[null,n,void 0]]);var r={};if(o)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(r[c]=!0)}for(var A=0;A<n.length;A++){var l=[].concat(n[A]);o&&r[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),a&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=a):l[4]="".concat(a)),e.push(l))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(a," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var i={},r=[],s=0;s<n.length;s++){var c=n[s],A=o.base?c[0]+o.base:c[0],l=i[A]||0,d="".concat(A," ").concat(l);i[A]=l+1;var p=t(d),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var m=a(u,o);o.byIndex=s,e.splice(s,0,{identifier:d,updater:m,references:1})}r.push(d)}return r}function a(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,a){var i=o(n=n||[],a=a||{});return function(n){n=n||[];for(var r=0;r<i.length;r++){var s=t(i[r]);e[s].references--}for(var c=o(n,a),A=0;A<i.length;A++){var l=t(i[A]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}i=c}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,a&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var a=e[o];if(void 0!==a)return a.exports;var i=e[o]={id:o,exports:{}};return n[o](i,i.exports,t),i.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var o=e.getElementsByTagName("script");if(o.length)for(var a=o.length-1;a>-1&&!n;)n=o[a--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.nc=void 0,(()=>{const n=(n,e)=>{const t=document.createElement("button");return t.classList.add("header-nav-button"),e.forEach((n=>{t.classList.add(n)})),t.textContent=n,t},e=(n,e,t=[])=>{const o=document.createElement("div");o.classList.add("quote-panel"),t.forEach((n=>{o.classList.add(n)}));const a=document.createElement("div");a.classList.add("quote-panel-quote"),o.appendChild(a);const i=n=>{a.textContent=`${n}`};i(n);const r=document.createElement("div");r.classList.add("quote-panel-author"),o.appendChild(r);const s=n=>{r.textContent=`${n}`};return s(e),{e:o,setQuote:i,setAuthor:s}},o=(n,e="",t=[])=>{const o=document.createElement("div");o.setAttribute("role","img"),o.classList.add("image-panel"),t.forEach((n=>{o.classList.add(n)}));const a=n=>{o.style.backgroundImage=`url(${n})`};a(n);const i=n=>{o.setAttribute("aria-label",n)};return i(e),{e:o,setImage:a,setAlt:i,setOffset:n=>{o.style.backgroundPosition=n}}},a=t.p+"69a830e36887b3c52c38.jpg",i=t.p+"54c6310e7499fbfd3897.jpg",r=t.p+"5b7c95b2866aabb51420.jpg";var s=t(379),c=t.n(s),A=t(795),l=t.n(A),d=t(569),p=t.n(d),u=t(565),m=t.n(u),h=t(216),C=t.n(h),g=t(589),f=t.n(g),b=t(846),y={};b.Z&&b.Z.locals&&(y.locals=b.Z.locals);var B,I=0,x={};x.styleTagTransform=f(),x.setAttributes=m(),x.insert=p().bind(null,"head"),x.domAPI=l(),x.insertStyleElement=C(),y.use=function(n){return x.options=n||{},I++||(B=c()(b.Z,x)),y},y.unuse=function(){I>0&&!--I&&(B(),B=null)};const v=y;let w=!1;const E=()=>{let n,t,s,c,A,l,d,p,u,m;return{draw:()=>{if(w)return;w=!w;const h=document.querySelector(".content");h&&(n=document.createElement("div"),n.classList.add("home-content-container"),h.appendChild(n),t=document.createElement("div"),t.classList.add("opening-line"),t.textContent="Established in 1974 by two brothers looking to bring world-class food to the area, Baker's Dozen has been producing quality baked goods for decades. We use only fresh, locally-sourced ingredients to provide unmatched taste for an affordable price. Check out our menu and see what all the fuss is about.",n.appendChild(t),s=document.createElement("div"),s.classList.add("image-container"),n.appendChild(s),c=o(a,"Many baked cinnamon rolls in a tray."),s.appendChild(c.e),A=o(i,"A number of buttery, flaky croissants laid out on baking paper."),s.appendChild(A.e),l=o(r,"A slice of cheesecake with blueberries on top."),l.setOffset("bottom 44% right 50%"),s.appendChild(l.e),d=document.createElement("div"),d.classList.add("quote-container"),n.appendChild(d),p=e('"Baker\'s Dozen has been the go-to spot for our family for over 20 years. We always feel so welcomed by the staff and owners and the food is fantastic."',"Janet Smith"),d.appendChild(p.e),u=e('"If someone were to ask me: "Where is the best bakery in town?", I\'d tell them it was here. Baker\'s Dozen has been making the same great food since I moved to the area 20 years ago."',"Thomas Lee"),d.appendChild(u.e),m=e('"Every weekend I bring my kids to this bakery as a treat. It absolutely makes their day - they love the food here."',"Simon Miller"),d.appendChild(m.e),v.use())},clear:()=>{w&&(w=!w,n.remove(),v.unuse())}}},k=(n,e,t,o,a=[])=>{const i=document.createElement("div");i.classList.add("menu-item-panel"),a.forEach((n=>{i.classList.add(n)}));const r=document.createElement("h2");r.classList.add("menu-item-panel-name"),i.appendChild(r);const s=n=>{r.textContent=`${n}`};s(n);const c=document.createElement("div");c.classList.add("menu-item-panel-description"),i.appendChild(c);const A=n=>{c.textContent=`"${n}"`};A(e);const l=document.createElement("h6");l.classList.add("menu-item-panel-calories"),i.appendChild(l);const d=n=>{l.textContent=`${n}kcal`};d(t);const p=document.createElement("h3");p.classList.add("menu-item-panel-price"),i.appendChild(p);const u=n=>{var e;p.textContent=`£${e=n,(Math.floor(e)/100).toFixed(2)}`};return u(o),{e:i,setName:s,setDescription:A,setCalories:d,setPrice:u}},j=t.p+"0cdd6dd0b585087bbafd.jpg",S=t.p+"d6dcd4c96882d92dc3fe.jpg",L=t.p+"3e4367b3d3d70db45f76.jpg",z=t.p+"013284d047661c134414.jpg";var q=t(966),T={};q.Z&&q.Z.locals&&(T.locals=q.Z.locals);var Z,U=0,D={};D.styleTagTransform=f(),D.setAttributes=m(),D.insert=p().bind(null,"head"),D.domAPI=l(),D.insertStyleElement=C(),T.use=function(n){return D.options=n||{},U++||(Z=c()(q.Z,D)),T},T.unuse=function(){U>0&&!--U&&(Z(),Z=null)};const O=T;let N=!1,R=[];const Y=(n,e)=>{R.push({panel:n,image:e})};Y(k("Apple Tart","Baker's Dozen's pride and joy. Our staple. Our classic. Warm, tangy apples on flaky, buttery pastry. Add a scoop of ice cream for no extra charge.","450","270"),o(j,"An apple tart with a scoop of ice cream on top.")),R[R.length-1].image.setOffset("bottom 60% right 50%"),Y(k("Brownies","A rich, fudgy brownie with a flaky top. What more needs to be said?","480","160"),o(L,"A stack of chocolate brownies.")),R[R.length-1].image.setOffset("bottom 70% right 50%"),Y(k("Cheesecake","A delicious and smooth slice of cheesecake, baked to perfection and covered in a tangy, rich blueberry sauce.","340","285"),o(r,"A slice of cheesecake with blueberries on top.")),R[R.length-1].image.setOffset("bottom 44% right 50%"),Y(k("Chocolate Muffin","A triple chocolate muffin with chocolate chips and filled with warm, melted chocolate sauce","460","210"),o(S,"A number of chocolate muffins in a tray.")),R[R.length-1].image.setOffset("bottom 70% right 50%"),Y(k("Cinnamon Roll","A doughy, warm roll filled with a sweet, sugary cinnamon mixture. (Additional cinnamon sugar glaze optional.)","450","250"),o(a,"Many baked cinnamon rolls in a tray.")),Y(k("Chocolate Cake","A slice of layered chocolate cake, filled with chocolate ganache and topped with fresh fruit of your choosing.","380","240"),o(z,"A slice of chocolate cake with chocolate filling.")),Y(k("Croissant","A buttery and flaky croissant, with optional raisin or chocolate filling.","410","140"),o(i,"A number of buttery, flaky croissants laid out on baking paper."));const M=()=>{let n;return{draw:()=>{if(N)return;N=!N;const e=document.querySelector(".content");if(e){n=document.createElement("div"),n.classList.add("menu-content-container"),e.appendChild(n);for(let e=0;e<R.length;e++)e%2!=0?(n.appendChild(R[e].panel.e),n.appendChild(R[e].image.e)):(n.appendChild(R[e].image.e),n.appendChild(R[e].panel.e));O.use()}},clear:()=>{N&&(N=!N,n.remove(),O.unuse())}}};var W=t(128),F={};W.Z&&W.Z.locals&&(F.locals=W.Z.locals);var H,P=0,$={};$.styleTagTransform=f(),$.setAttributes=m(),$.insert=p().bind(null,"head"),$.domAPI=l(),$.insertStyleElement=C(),F.use=function(n){return $.options=n||{},P++||(H=c()(W.Z,$)),F},F.unuse=function(){P>0&&!--P&&(H(),H=null)};const Q=F;let K=!1;const J=()=>{let n;return{draw:()=>{if(K)return;K=!K;const e=document.querySelector(".content");if(!e)return;n=document.createElement("div"),n.classList.add("contact-content-container"),e.appendChild(n);const t=document.createElement("div");t.classList.add("opening-times-container"),n.appendChild(t);const o=document.createElement("h2");o.classList.add("opening-times-title"),o.textContent="Opening Times",t.appendChild(o);const a=((n=[])=>{const e=document.createElement("div");e.classList.add("opening-times-panel"),n.forEach((n=>{e.classList.add(n)}));const t=(n,e,t)=>{n<0||n>6||(o[n].childNodes[1].textContent=e,o[n].childNodes[2].textContent="-",o[n].childNodes[3].textContent=t)};let o=[];for(let n=0;n<7;n++){const a=document.createElement("div");a.classList.add("opening-times-panel-day"),e.appendChild(a);const i=document.createElement("div");i.classList.add("opening-times-panel-day-name"),a.appendChild(i);const r=document.createElement("div");r.classList.add("opening-times-panel-day-opening-time"),a.appendChild(r);const s=document.createElement("div");s.classList.add("opening-times-panel-day-time-sep"),s.textContent="-",a.appendChild(s);const c=document.createElement("div");switch(c.classList.add("opening-times-panel-day-closing-time"),a.appendChild(c),n){case 0:i.textContent="Monday: ";break;case 1:i.textContent="Tuesday: ";break;case 2:i.textContent="Wednesday: ";break;case 3:i.textContent="Thursday: ";break;case 4:i.textContent="Friday: ";break;case 5:i.textContent="Saturday: ";break;case 6:i.textContent="Sunday: ";break;default:i.textContent="Error!"}o.push(a),t(n,"00:00am","00:00am")}return{e,setDayTimes:t,setDayClosed:n=>{n<0||n>6||(o[n].childNodes[1].textContent="Closed",o[n].childNodes[2].textContent="",o[n].childNodes[3].textContent="")}}})();a.setDayTimes(0,"07:30am","21:00pm"),a.setDayTimes(1,"07:30am","21:00pm"),a.setDayClosed(2),a.setDayTimes(3,"07:30am","21:00pm"),a.setDayTimes(4,"07:30am","21:00pm"),a.setDayTimes(5,"06:00am","22:30pm"),a.setDayTimes(6,"09:00am","17:00pm"),t.appendChild(a.e);const i=document.createElement("div");i.classList.add("address-container"),n.appendChild(i);const r=document.createElement("div");r.classList.add("contact-information-container"),n.appendChild(r),Q.use()},clear:()=>{K&&(K=!K,n.remove(),Q.unuse())}}};let _=[],G=2;const V=n=>{n<_.length&&n!=G&&(_[n].button.classList.add("current"),X(),G=n,nn(),en())},X=()=>{_[G].content.clear()},nn=()=>{_.forEach((n=>{n.button.classList.remove("current")})),_[G].button.classList.add("current")},en=()=>{_[G].content.draw()},tn=()=>{const e=document.querySelector(".header");for(_=[];e.firstChild;)e.removeChild(e.lastChild);const t=document.createElement("h1");t.classList.add("company-name"),t.classList.add("no-select"),t.textContent="Baker's Dozen",e.appendChild(t);const o=document.createElement("nav");o.classList.add("navigation-bar"),e.appendChild(o),(()=>{_.push({button:n("Home",["nav-button-home"]),content:E()}),_.push({button:n("Menu",["nav-button-menu"]),content:M()}),_.push({button:n("Contact",["nav-button-contact"]),content:J()});for(let n=0;n<_.length;n++)_[n].button.addEventListener("click",(()=>V(n)));nn(),en()})(),_.forEach((n=>{o.appendChild(n.button)}))};var on=t(28),an={};an.styleTagTransform=f(),an.setAttributes=m(),an.insert=p().bind(null,"head"),an.domAPI=l(),an.insertStyleElement=C(),c()(on.Z,an),on.Z&&on.Z.locals&&on.Z.locals,(()=>{const n=document.createElement("div");n.id="page",document.body.appendChild(n);const e=document.createElement("div");e.classList.add("header"),n.appendChild(e);const t=document.createElement("div");t.classList.add("content"),n.appendChild(t),tn()})()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,