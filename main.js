(()=>{"use strict";var e={128:(e,n,t)=>{t.d(n,{Z:()=>s});var o=t(537),a=t.n(o),r=t(645),i=t.n(r)()(a());i.push([e.id,"","",{version:3,sources:[],names:[],mappings:"",sourceRoot:""}]);const s=i},846:(e,n,t)=>{t.d(n,{Z:()=>s});var o=t(537),a=t.n(o),r=t(645),i=t.n(r)()(a());i.push([e.id,".home-content-container {\n    display: grid;\n    grid-template-rows: repeat(3, auto);\n    align-content: start;\n}\n\n.opening-line {\n    justify-self: center;\n    font-size: 1.0rem;\n    line-height: 1.2rem;\n    text-align: center;\n    font-weight: bold;\n    max-width: 1440px;\n    padding: 20px;\n}\n\n.image-container {\n    display: flex;\n    justify-content: center;\n    flex-wrap: nowrap;\n    gap: 20px;\n}\n\n.image-panel {\n    position: relative;\n    width: 324px;\n    height: 170px;\n    background-size: cover;\n    border-radius: 10px;\n    box-shadow: 0px 6px 5px rgba(60, 60, 60, 0.3);\n}\n\n.quote-container {\n    display: flex;\n    justify-content: center;\n    flex-wrap: nowrap;\n    padding: 20px;\n    gap: 20px;\n}\n\n.quote-panel {\n    flex-shrink: 0;\n    display: grid;\n    grid-template-rows: 1fr auto;\n    height: 270px;\n    width: 300px;\n    overflow: auto;\n    border-radius: 10px;\n    background-color: rgb(250, 250, 250);\n    box-shadow: 0px 6px 5px rgba(60, 60, 60, 0.3);\n    padding: 12px;\n}\n\n.quote-panel .quote-panel-quote {\n    font-style: italic;\n    font-size: 1.1rem;\n    line-height: 1.4rem;\n}\n\n.quote-panel .quote-panel-author {\n    font-size: 0.9rem;\n    text-align: end;\n}","",{version:3,sources:["webpack://./src/content/content-home-styles.lazy.css"],names:[],mappings:"AAAA;IACI,aAAa;IACb,mCAAmC;IACnC,oBAAoB;AACxB;;AAEA;IACI,oBAAoB;IACpB,iBAAiB;IACjB,mBAAmB;IACnB,kBAAkB;IAClB,iBAAiB;IACjB,iBAAiB;IACjB,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,iBAAiB;IACjB,SAAS;AACb;;AAEA;IACI,kBAAkB;IAClB,YAAY;IACZ,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,6CAA6C;AACjD;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,iBAAiB;IACjB,aAAa;IACb,SAAS;AACb;;AAEA;IACI,cAAc;IACd,aAAa;IACb,4BAA4B;IAC5B,aAAa;IACb,YAAY;IACZ,cAAc;IACd,mBAAmB;IACnB,oCAAoC;IACpC,6CAA6C;IAC7C,aAAa;AACjB;;AAEA;IACI,kBAAkB;IAClB,iBAAiB;IACjB,mBAAmB;AACvB;;AAEA;IACI,iBAAiB;IACjB,eAAe;AACnB",sourcesContent:[".home-content-container {\n    display: grid;\n    grid-template-rows: repeat(3, auto);\n    align-content: start;\n}\n\n.opening-line {\n    justify-self: center;\n    font-size: 1.0rem;\n    line-height: 1.2rem;\n    text-align: center;\n    font-weight: bold;\n    max-width: 1440px;\n    padding: 20px;\n}\n\n.image-container {\n    display: flex;\n    justify-content: center;\n    flex-wrap: nowrap;\n    gap: 20px;\n}\n\n.image-panel {\n    position: relative;\n    width: 324px;\n    height: 170px;\n    background-size: cover;\n    border-radius: 10px;\n    box-shadow: 0px 6px 5px rgba(60, 60, 60, 0.3);\n}\n\n.quote-container {\n    display: flex;\n    justify-content: center;\n    flex-wrap: nowrap;\n    padding: 20px;\n    gap: 20px;\n}\n\n.quote-panel {\n    flex-shrink: 0;\n    display: grid;\n    grid-template-rows: 1fr auto;\n    height: 270px;\n    width: 300px;\n    overflow: auto;\n    border-radius: 10px;\n    background-color: rgb(250, 250, 250);\n    box-shadow: 0px 6px 5px rgba(60, 60, 60, 0.3);\n    padding: 12px;\n}\n\n.quote-panel .quote-panel-quote {\n    font-style: italic;\n    font-size: 1.1rem;\n    line-height: 1.4rem;\n}\n\n.quote-panel .quote-panel-author {\n    font-size: 0.9rem;\n    text-align: end;\n}"],sourceRoot:""}]);const s=i},966:(e,n,t)=>{t.d(n,{Z:()=>s});var o=t(537),a=t.n(o),r=t(645),i=t.n(r)()(a());i.push([e.id,".menu-content-container {\n    margin: auto;\n    display: flex;\n    justify-content: center;\n    flex-wrap: wrap;\n    width: 1000px;\n    padding: 20px;\n    gap: 20px;\n}\n\n.image-panel {\n    position: relative;\n    width: 324px;\n    height: auto;\n    background-size: cover;\n    border-radius: 10px;\n    box-shadow: 0px 6px 5px rgba(60, 60, 60, 0.3);\n}\n\n.menu-item-panel {\n    flex-shrink: 0;\n    display: grid;\n    grid-template-rows: auto 1fr repeat(2, auto);\n    width: 600px;\n    min-height: 200px;\n    overflow: auto;\n    border-radius: 10px;\n    background-color: rgb(250, 250, 250);\n    box-shadow: 0px 6px 5px rgba(60, 60, 60, 0.3);\n    padding: 12px;\n}\n\n.menu-item-panel .menu-item-panel-name {\n    font-size: 1.5rem;\n}\n.menu-item-panel .menu-item-panel-description {\n    font-size: 1.0rem;\n    font-style: italic;\n}\n.menu-item-panel .menu-item-panel-calories {\n    font-size: 0.7rem;\n}\n.menu-item-panel .menu-item-panel-price {\n    font-size: 1.2rem;\n}","",{version:3,sources:["webpack://./src/content/content-menu-styles.lazy.css"],names:[],mappings:"AAAA;IACI,YAAY;IACZ,aAAa;IACb,uBAAuB;IACvB,eAAe;IACf,aAAa;IACb,aAAa;IACb,SAAS;AACb;;AAEA;IACI,kBAAkB;IAClB,YAAY;IACZ,YAAY;IACZ,sBAAsB;IACtB,mBAAmB;IACnB,6CAA6C;AACjD;;AAEA;IACI,cAAc;IACd,aAAa;IACb,4CAA4C;IAC5C,YAAY;IACZ,iBAAiB;IACjB,cAAc;IACd,mBAAmB;IACnB,oCAAoC;IACpC,6CAA6C;IAC7C,aAAa;AACjB;;AAEA;IACI,iBAAiB;AACrB;AACA;IACI,iBAAiB;IACjB,kBAAkB;AACtB;AACA;IACI,iBAAiB;AACrB;AACA;IACI,iBAAiB;AACrB",sourcesContent:[".menu-content-container {\n    margin: auto;\n    display: flex;\n    justify-content: center;\n    flex-wrap: wrap;\n    width: 1000px;\n    padding: 20px;\n    gap: 20px;\n}\n\n.image-panel {\n    position: relative;\n    width: 324px;\n    height: auto;\n    background-size: cover;\n    border-radius: 10px;\n    box-shadow: 0px 6px 5px rgba(60, 60, 60, 0.3);\n}\n\n.menu-item-panel {\n    flex-shrink: 0;\n    display: grid;\n    grid-template-rows: auto 1fr repeat(2, auto);\n    width: 600px;\n    min-height: 200px;\n    overflow: auto;\n    border-radius: 10px;\n    background-color: rgb(250, 250, 250);\n    box-shadow: 0px 6px 5px rgba(60, 60, 60, 0.3);\n    padding: 12px;\n}\n\n.menu-item-panel .menu-item-panel-name {\n    font-size: 1.5rem;\n}\n.menu-item-panel .menu-item-panel-description {\n    font-size: 1.0rem;\n    font-style: italic;\n}\n.menu-item-panel .menu-item-panel-calories {\n    font-size: 0.7rem;\n}\n.menu-item-panel .menu-item-panel-price {\n    font-size: 1.2rem;\n}"],sourceRoot:""}]);const s=i},28:(e,n,t)=>{t.d(n,{Z:()=>s});var o=t(537),a=t.n(o),r=t(645),i=t.n(r)()(a());i.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Nunito:wght@300&family=Righteous&family=Staatliches&display=swap);"]),i.push([e.id,'/* Fonts */\n\n:root {\n    --nunito-font-family: Nunito, system-ui, "Segoe UI", Roboto, Helvetica, Arial,\n        sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";\n    --righteous-font-family: Righteous, system-ui, "Segoe UI", Roboto, Helvetica, Arial,\n        sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";\n    font-size: 20px;\n}\n\n.no-select {\n    -webkit-touch-callout: none;    /* iOS Safari */\n    -webkit-user-select: none;      /* Safari */\n    -khtml-user-select: none;       /* Konqueror HTML */\n    -moz-user-select: none;         /* Old versions of Firefox */\n    -ms-user-select: none;          /* Internet Explorer/Edge */\n    user-select: none;              /* Non-prefixed version, currently\n                                       supported by Chrome, Edge, Opera and Firefox */\n}\n\nh1, h2, h3, h4, h5, h6 {\n    padding: 0px;\n    margin: 0px;\n}\n\nbody {\n    font-family: Nunito, system-ui, "Segoe UI", Roboto, Helvetica, Arial,\n        sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";\n    font-family: var(--nunito-font-family);\n    margin: 0;\n    justify-content: center;\n    min-width: 100vw;\n    min-height: 100vh;\n    height: 100vh;\n}\n\n#page { \n    display: grid;\n    grid-template-rows: auto 1fr;\n    width: inherit;\n    height: 100vh;\n}\n\n.header {\n    grid-area: 1 / 1 / 2 / -1;\n    font-family: var(--righteous-font-family);\n    background-color: rgb(230, 6, 6);\n    padding: 20px;\n}\n\n.header .company-name {\n    grid-area: 1 / 1 / 2 / -1;\n    text-align: center;\n    font-size: 1.8rem;\n    white-space: nowrap;\n    color: white;\n}\n\n.header .navigation-bar {\n    grid-area: 2 / 1 / -1 / -1;\n    display: flex;\n    justify-content: center;\n    flex-wrap: nowrap;\n    gap: 12px;\n    padding-top: 30px;\n}\n\n.header .navigation-bar button {\n    flex-shrink: 0;\n    width: 6rem;\n    height: 1.6rem;\n    border-radius: 9999px;\n    font-family: var(--nunito-font-family);\n    font-size: 0.8rem;\n    font-weight: bold;\n    text-align: center;\n    vertical-align: center;\n    border: none;\n    background-color: rgb(245, 245, 245);\n}\n.header .navigation-bar button:hover {\n    outline: 2px solid rgb(255, 255, 255);\n    background-color: rgb(255, 255, 255);\n}\n.header .navigation-bar button:active {\n    background-color: rgb(221, 221, 221);\n}\n.header .navigation-bar button.current {\n    background-color: rgb(253, 185, 36);\n}\n\n.content {\n    grid-area: 2 / 1 / -1 / -1;\n    background-color: #f8e8e8;\n}',"",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA,UAAU;;AAGV;IACI;4EACwE;IACxE;4EACwE;IACxE,eAAe;AACnB;;AAEA;IACI,2BAA2B,KAAK,eAAe;IAC/C,yBAAyB,OAAO,WAAW;IAC3C,wBAAwB,QAAQ,mBAAmB;IACnD,sBAAsB,UAAU,4BAA4B;IAC5D,qBAAqB,WAAW,2BAA2B;IAC3D,iBAAiB,eAAe;qFACiD;AACrF;;AAEA;IACI,YAAY;IACZ,WAAW;AACf;;AAEA;IACI;4EACwE;IACxE,sCAAsC;IACtC,SAAS;IACT,uBAAuB;IACvB,gBAAgB;IAChB,iBAAiB;IACjB,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,4BAA4B;IAC5B,cAAc;IACd,aAAa;AACjB;;AAEA;IACI,yBAAyB;IACzB,yCAAyC;IACzC,gCAAgC;IAChC,aAAa;AACjB;;AAEA;IACI,yBAAyB;IACzB,kBAAkB;IAClB,iBAAiB;IACjB,mBAAmB;IACnB,YAAY;AAChB;;AAEA;IACI,0BAA0B;IAC1B,aAAa;IACb,uBAAuB;IACvB,iBAAiB;IACjB,SAAS;IACT,iBAAiB;AACrB;;AAEA;IACI,cAAc;IACd,WAAW;IACX,cAAc;IACd,qBAAqB;IACrB,sCAAsC;IACtC,iBAAiB;IACjB,iBAAiB;IACjB,kBAAkB;IAClB,sBAAsB;IACtB,YAAY;IACZ,oCAAoC;AACxC;AACA;IACI,qCAAqC;IACrC,oCAAoC;AACxC;AACA;IACI,oCAAoC;AACxC;AACA;IACI,mCAAmC;AACvC;;AAEA;IACI,0BAA0B;IAC1B,yBAAyB;AAC7B",sourcesContent:['/* Fonts */\n@import url(\'https://fonts.googleapis.com/css2?family=Nunito:wght@300&family=Righteous&family=Staatliches&display=swap\');\n\n:root {\n    --nunito-font-family: Nunito, system-ui, "Segoe UI", Roboto, Helvetica, Arial,\n        sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";\n    --righteous-font-family: Righteous, system-ui, "Segoe UI", Roboto, Helvetica, Arial,\n        sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";\n    font-size: 20px;\n}\n\n.no-select {\n    -webkit-touch-callout: none;    /* iOS Safari */\n    -webkit-user-select: none;      /* Safari */\n    -khtml-user-select: none;       /* Konqueror HTML */\n    -moz-user-select: none;         /* Old versions of Firefox */\n    -ms-user-select: none;          /* Internet Explorer/Edge */\n    user-select: none;              /* Non-prefixed version, currently\n                                       supported by Chrome, Edge, Opera and Firefox */\n}\n\nh1, h2, h3, h4, h5, h6 {\n    padding: 0px;\n    margin: 0px;\n}\n\nbody {\n    font-family: Nunito, system-ui, "Segoe UI", Roboto, Helvetica, Arial,\n        sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";\n    font-family: var(--nunito-font-family);\n    margin: 0;\n    justify-content: center;\n    min-width: 100vw;\n    min-height: 100vh;\n    height: 100vh;\n}\n\n#page { \n    display: grid;\n    grid-template-rows: auto 1fr;\n    width: inherit;\n    height: 100vh;\n}\n\n.header {\n    grid-area: 1 / 1 / 2 / -1;\n    font-family: var(--righteous-font-family);\n    background-color: rgb(230, 6, 6);\n    padding: 20px;\n}\n\n.header .company-name {\n    grid-area: 1 / 1 / 2 / -1;\n    text-align: center;\n    font-size: 1.8rem;\n    white-space: nowrap;\n    color: white;\n}\n\n.header .navigation-bar {\n    grid-area: 2 / 1 / -1 / -1;\n    display: flex;\n    justify-content: center;\n    flex-wrap: nowrap;\n    gap: 12px;\n    padding-top: 30px;\n}\n\n.header .navigation-bar button {\n    flex-shrink: 0;\n    width: 6rem;\n    height: 1.6rem;\n    border-radius: 9999px;\n    font-family: var(--nunito-font-family);\n    font-size: 0.8rem;\n    font-weight: bold;\n    text-align: center;\n    vertical-align: center;\n    border: none;\n    background-color: rgb(245, 245, 245);\n}\n.header .navigation-bar button:hover {\n    outline: 2px solid rgb(255, 255, 255);\n    background-color: rgb(255, 255, 255);\n}\n.header .navigation-bar button:active {\n    background-color: rgb(221, 221, 221);\n}\n.header .navigation-bar button.current {\n    background-color: rgb(253, 185, 36);\n}\n\n.content {\n    grid-area: 2 / 1 / -1 / -1;\n    background-color: #f8e8e8;\n}'],sourceRoot:""}]);const s=i},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",o=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),o&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),o&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,o,a,r){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(o)for(var s=0;s<this.length;s++){var A=this[s][0];null!=A&&(i[A]=!0)}for(var l=0;l<e.length;l++){var c=[].concat(e[l]);o&&i[c[0]]||(void 0!==r&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=r),t&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=t):c[2]=t),a&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=a):c[4]="".concat(a)),n.push(c))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),r="/*# ".concat(a," */");return[n].concat([r]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,o=0;o<n.length;o++)if(n[o].identifier===e){t=o;break}return t}function o(e,o){for(var r={},i=[],s=0;s<e.length;s++){var A=e[s],l=o.base?A[0]+o.base:A[0],c=r[l]||0,d="".concat(l," ").concat(c);r[l]=c+1;var p=t(d),u={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==p)n[p].references++,n[p].updater(u);else{var m=a(u,o);o.byIndex=s,n.splice(s,0,{identifier:d,updater:m,references:1})}i.push(d)}return i}function a(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,a){var r=o(e=e||[],a=a||{});return function(e){e=e||[];for(var i=0;i<r.length;i++){var s=t(r[i]);n[s].references--}for(var A=o(e,a),l=0;l<r.length;l++){var c=t(r[l]);0===n[c].references&&(n[c].updater(),n.splice(c,1))}r=A}}},569:e=>{var n={};e.exports=function(e,t){var o=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,a&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var r=t.sourceMap;r&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),n.styleTagTransform(o,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(o){var a=n[o];if(void 0!==a)return a.exports;var r=n[o]={id:o,exports:{}};return e[o](r,r.exports,t),r.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var o in n)t.o(n,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:n[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var o=n.getElementsByTagName("script");if(o.length)for(var a=o.length-1;a>-1&&!e;)e=o[a--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.nc=void 0,(()=>{const e=(e,n)=>{const t=document.createElement("button");return t.classList.add("header-nav-button"),n.forEach((e=>{t.classList.add(e)})),t.textContent=e,t},n=(e,n,t=[])=>{const o=document.createElement("div");o.classList.add("quote-panel"),t.forEach((e=>{o.classList.add(e)}));const a=document.createElement("div");a.classList.add("quote-panel-quote"),o.appendChild(a);const r=e=>{a.textContent=`${e}`};r(e);const i=document.createElement("div");i.classList.add("quote-panel-author"),o.appendChild(i);const s=e=>{i.textContent=`${e}`};return s(n),{e:o,setQuote:r,setAuthor:s}},o=(e,n="",t=[])=>{const o=document.createElement("div");o.setAttribute("role","img"),o.classList.add("image-panel"),t.forEach((e=>{o.classList.add(e)}));const a=e=>{o.style.backgroundImage=`url(${e})`};a(e);const r=e=>{o.setAttribute("aria-label",e)};return r(n),{e:o,setImage:a,setAlt:r,setOffset:e=>{o.style.backgroundPosition=e}}},a=t.p+"69a830e36887b3c52c38.jpg",r=t.p+"54c6310e7499fbfd3897.jpg",i=t.p+"5b7c95b2866aabb51420.jpg";var s=t(379),A=t.n(s),l=t(795),c=t.n(l),d=t(569),p=t.n(d),u=t(565),m=t.n(u),h=t(216),f=t.n(h),g=t(589),C=t.n(g),b=t(846),B={};b.Z&&b.Z.locals&&(B.locals=b.Z.locals);var I,y=0,x={};x.styleTagTransform=C(),x.setAttributes=m(),x.insert=p().bind(null,"head"),x.domAPI=c(),x.insertStyleElement=f(),B.use=function(e){return x.options=e||{},y++||(I=A()(b.Z,x)),B},B.unuse=function(){y>0&&!--y&&(I(),I=null)};const v=B;let w=!1;const k=()=>{let e,t,s,A,l,c,d,p,u,m;return{draw:()=>{if(w)return;w=!w;const h=document.querySelector(".content");h&&(e=document.createElement("div"),e.classList.add("home-content-container"),h.appendChild(e),t=document.createElement("div"),t.classList.add("opening-line"),t.textContent="Established in 1974 by two brothers looking to bring world-class food to the area, Baker's Dozen has been producing quality baked goods for decades. We use only fresh, locally-sourced ingredients to provide unmatched taste for an affordable price. Check out our menu and see what all the fuss is about.",e.appendChild(t),s=document.createElement("div"),s.classList.add("image-container"),e.appendChild(s),A=o(a,"Many baked cinnamon rolls in a tray."),s.appendChild(A.e),l=o(r,"A number of buttery, flaky croissants laid out on baking paper."),s.appendChild(l.e),c=o(i,"A slice of cheesecake with blueberries on top."),c.setOffset("bottom 44% right 50%"),s.appendChild(c.e),d=document.createElement("div"),d.classList.add("quote-container"),e.appendChild(d),p=n('"Baker\'s Dozen has been the go-to spot for our family for over 20 years. We always feel so welcomed by the staff and owners and the food is fantastic."',"Janet Smith"),d.appendChild(p.e),u=n('"If someone were to ask me: "Where is the best bakery in town?", I\'d tell them it was here. Baker\'s Dozen has been making the same great food since I moved to the area 20 years ago."',"Thomas Lee"),d.appendChild(u.e),m=n('"Every weekend I bring my kids to this bakery as a treat. It absolutely makes their day - they love the food here."',"Simon Miller"),d.appendChild(m.e),v.use())},clear:()=>{w&&(w=!w,e.remove(),v.unuse())}}},E=(e,n,t,o,a=[])=>{const r=document.createElement("div");r.classList.add("menu-item-panel"),a.forEach((e=>{r.classList.add(e)}));const i=document.createElement("h2");i.classList.add("menu-item-panel-name"),r.appendChild(i);const s=e=>{i.textContent=`${e}`};s(e);const A=document.createElement("div");A.classList.add("menu-item-panel-description"),r.appendChild(A);const l=e=>{A.textContent=`"${e}"`};l(n);const c=document.createElement("h6");c.classList.add("menu-item-panel-calories"),r.appendChild(c);const d=e=>{c.textContent=`${e}kcal`};d(t);const p=document.createElement("h3");p.classList.add("menu-item-panel-price"),r.appendChild(p);const u=e=>{var n;p.textContent=`£${n=e,(Math.floor(n)/100).toFixed(2)}`};return u(o),{e:r,setName:s,setDescription:l,setCalories:d,setPrice:u}},j=t.p+"0cdd6dd0b585087bbafd.jpg",S=t.p+"d6dcd4c96882d92dc3fe.jpg",z=t.p+"3e4367b3d3d70db45f76.jpg",L=t.p+"013284d047661c134414.jpg";var q=t(966),Z={};q.Z&&q.Z.locals&&(Z.locals=q.Z.locals);var U,T=0,O={};O.styleTagTransform=C(),O.setAttributes=m(),O.insert=p().bind(null,"head"),O.domAPI=c(),O.insertStyleElement=f(),Z.use=function(e){return O.options=e||{},T++||(U=A()(q.Z,O)),Z},Z.unuse=function(){T>0&&!--T&&(U(),U=null)};const R=Z;let Y=!1,M=[];const N=(e,n)=>{M.push({panel:e,image:n})};N(E("Apple Tart","Baker's Dozen's pride and joy. Our staple. Our classic. Warm, tangy apples on flaky, buttery pastry. Add a scoop of ice cream for no extra charge.","450","270"),o(j,"An apple tart with a scoop of ice cream on top.")),M[M.length-1].image.setOffset("bottom 60% right 50%"),N(E("Brownies","A rich, fudgy brownie with a flaky top. What more needs to be said?","480","160"),o(z,"A stack of chocolate brownies.")),M[M.length-1].image.setOffset("bottom 70% right 50%"),N(E("Cheesecake","A delicious and smooth slice of cheesecake, baked to perfection and covered in a tangy, rich blueberry sauce.","340","285"),o(i,"A slice of cheesecake with blueberries on top.")),M[M.length-1].image.setOffset("bottom 44% right 50%"),N(E("Chocolate Muffin","A triple chocolate muffin with chocolate chips and filled with warm, melted chocolate sauce","460","210"),o(S,"A number of chocolate muffins in a tray.")),M[M.length-1].image.setOffset("bottom 70% right 50%"),N(E("Cinnamon Roll","A doughy, warm roll filled with a sweet, sugary cinnamon mixture. (Additional cinnamon sugar glaze optional.)","450","250"),o(a,"Many baked cinnamon rolls in a tray.")),N(E("Chocolate Cake","A slice of layered chocolate cake, filled with chocolate ganache and topped with fresh fruit of your choosing.","380","240"),o(L,"A slice of chocolate cake with chocolate filling.")),N(E("Croissant","A buttery and flaky croissant, with optional raisin or chocolate filling.","410","140"),o(r,"A number of buttery, flaky croissants laid out on baking paper."));const D=()=>{let e;return{draw:()=>{if(Y)return;Y=!Y;const n=document.querySelector(".content");if(n){e=document.createElement("div"),e.classList.add("menu-content-container"),n.appendChild(e);for(let n=0;n<M.length;n++)n%2!=0?(e.appendChild(M[n].panel.e),e.appendChild(M[n].image.e)):(e.appendChild(M[n].image.e),e.appendChild(M[n].panel.e));R.use()}},clear:()=>{Y&&(Y=!Y,e.remove(),R.unuse())}}};var W=t(128),F={};W.Z&&W.Z.locals&&(F.locals=W.Z.locals);var H,P=0,$={};$.styleTagTransform=C(),$.setAttributes=m(),$.insert=p().bind(null,"head"),$.domAPI=c(),$.insertStyleElement=f(),F.use=function(e){return $.options=e||{},P++||(H=A()(W.Z,$)),F},F.unuse=function(){P>0&&!--P&&(H(),H=null)};let K=[],J=1;const Q=e=>{e<K.length&&e!=J&&(K[e].button.classList.add("current"),_(),J=e,G(),V())},_=()=>{K[J].content.clear()},G=()=>{K.forEach((e=>{e.button.classList.remove("current")})),K[J].button.classList.add("current")},V=()=>{K[J].content.draw()},X=()=>{const n=document.querySelector(".header");for(K=[];n.firstChild;)n.removeChild(n.lastChild);const t=document.createElement("h1");t.classList.add("company-name"),t.classList.add("no-select"),t.textContent="Baker's Dozen",n.appendChild(t);const o=document.createElement("nav");o.classList.add("navigation-bar"),n.appendChild(o),(()=>{K.push({button:e("Home",["nav-button-home"]),content:k()}),K.push({button:e("Menu",["nav-button-menu"]),content:D()}),K.push({button:e("Contact",["nav-button-contact"]),content:void 0});for(let e=0;e<K.length;e++)K[e].button.addEventListener("click",(()=>Q(e)));G(),V()})(),K.forEach((e=>{o.appendChild(e.button)}))};var ee=t(28),ne={};ne.styleTagTransform=C(),ne.setAttributes=m(),ne.insert=p().bind(null,"head"),ne.domAPI=c(),ne.insertStyleElement=f(),A()(ee.Z,ne),ee.Z&&ee.Z.locals&&ee.Z.locals,(()=>{const e=document.createElement("div");e.id="page",document.body.appendChild(e);const n=document.createElement("div");n.classList.add("header"),e.appendChild(n);const t=document.createElement("div");t.classList.add("content"),e.appendChild(t),X()})()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,